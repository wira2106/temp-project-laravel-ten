        'Dim IP As String = ""
        Dim jum As Integer = 0
        Dim CounterKarton As Integer = 0
        Dim CounterKecil As Integer = 0
        Dim AdaKartonan As Boolean = False
        Dim AdaKecil As Boolean = False
        Dim KodeSBU As String = ""
        Dim jumItmCSV As Integer = 0
        Dim jumTolakan As Integer = 0
        Dim rphValid As Double = 0
        Dim PersenMargin As Double = 0
        Dim rphOrder As Double = 0
        Dim PBO_NoUrut As Integer = 0
        Dim KubikPB As Double = 0
        Dim NoPick As Double = 0
        Dim Gate As String = ""
        Dim GateOrder As Integer = 0
        Dim TipeMobil As String = ""
        Dim JumlahKontainer As Integer = 0
        Dim JumlahBronjong As Integer = 0
        Dim KodeCluster As String = ""
        Dim GroupCluster As String = ""
        Dim KubikasiMobil As Double = 0
        Dim KubikasiKontainer As Double = 0
        Dim KubikasiBronjong As Double = 0
        Dim NoSJ As String = ""
        Dim GR1 As String = ""
        Dim GR2 As String = ""
        Dim GR3 As String = ""
        Dim VolContainer As Double = 0
        Dim VolBronjong As Double = 0
        Dim dtContainer As New DataTable("CONTAINER IDM")

        'IP = getIP()

        'KodeToko = dgvHeader.CurrentRow.Cells(2).Value
        noPB = dgvHeader.CurrentRow.Cells(0).Value
        tglPB = dgvHeader.CurrentRow.Cells(1).Value

        ExecQRY("DELETE FROM TEMP_CETAKPB_TOLAKAN_IDM WHERE REQ_ID = '" & IP & "' ", "DEL TEMP_CETAKPB_TOLAKAN_IDM")

        sb = New StringBuilder
        sb.AppendLine("Select coalesce(count(1),0) ")
        sb.AppendLine("  From TBTR_HEADER_Majalah ")
        sb.AppendLine(" Where HDM_KodeIGR='" & KDIGR & "' ")
        'sb.AppendLine("   AND HDM_KodeToko = '" & KodeToko & "' ")
        sb.AppendLine("   AND HDM_NoPB = '" & noPB & "' ")
        sb.AppendLine("   AND HDM_TglPB = TO_DATE('" & tglPB & "','DD-MM-YYYY') ")
        'sb.AppendLine("   AND HPBI_TglPB = '" & Strings.Right(tglPB, 4) & Mid(tglPB, 4, 2) & Strings.Left(tglPB, 2) & "' ")
        'sb.AppendLine("   AND SUBSTR(HDM_TglPB,1,4) = '" & Strings.Right(tglPB, 4) & "' ")
        sb.AppendLine("   AND TO_CHAR(HDM_TglPB,'YYYY') = '" & Strings.Right(tglPB, 4) & "' ")

        cmd.CommandText = sb.ToString

        If cn.State = ConnectionState.Closed Then cn.Open()
        jum = cmd.ExecuteScalar

        If jum > 0 Then
            'MsgBox("PB Dengan No = " & noPB & ", KodeTOKO = " & KodeToko & ", Tgl PB = " & tglPB & vbNewLine & "Sudah Pernah Diproses !", MsgBoxStyle.Information, "UPLOAD PB IDM")
            MsgBox("PB Dengan No = " & noPB & ", KodeTOKO = " & KodeToko & " Sudah Pernah Diproses !", MsgBoxStyle.Information, ProgName)
            Cursor = Cursors.Arrow
            Exit Sub
        End If

        'GET KODE DC
        kodeDCIDM = getKodeDC(KodeToko)

        Application.DoEvents()
        progress.Value = 20
        sb = New StringBuilder
        sb.AppendLine("INSERT Into TEMP_CETAKPB_TOLAKAN_IDM ")
        sb.AppendLine("( ")
        sb.AppendLine("   KOMI, ")
        sb.AppendLine("   TGL, ")
        sb.AppendLine("   NODOK, ")
        sb.AppendLine("   TGLDOK, ")
        sb.AppendLine("   PLU, ")
        sb.AppendLine("   PLUIGR, ")
        sb.AppendLine("   KETA, ")
        sb.AppendLine("   TAG, ")
        sb.AppendLine("   DESCR, ")
        sb.AppendLine("   QTYO, ")
        sb.AppendLine("   GROSS, ")
        sb.AppendLine("   KCAB, ")
        sb.AppendLine("   KODEIGR, ")
        sb.AppendLine("   REQ_ID ")
        sb.AppendLine(") ")
        If kodeDCIDM <> "" Then
            sb.AppendLine("Select '', ")
            sb.AppendLine("       CURRENT_DATE,  ")
            sb.AppendLine("	      CPM_NoPB, ")
            sb.AppendLine("	      CPM_TglPB, ")
            sb.AppendLine("	      CPM_PLUIDM, ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      'PLU TIDAK TERDAFTAR DI TBMASTER_PRODCRM', ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      CPM_QTY, ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      CPM_KodeToko, ")
            sb.AppendLine("	      '" & KDIGR & "', ")
            sb.AppendLine("	      '" & IP & "' ")
            sb.AppendLine("  From csv_pb_majalah ")
            sb.AppendLine(" Where not exists ")
            sb.AppendLine(" ( ")
            sb.AppendLine("    Select idm_pluigr ")
            sb.AppendLine("      From tbmaster_pluidm  ")
            sb.AppendLine("     Where idm_pluidm = CPM_PLUIDM  ")
            sb.AppendLine("	      AND idm_kodeidm = '" & kodeDCIDM & "' ")
            sb.AppendLine("	      AND idm_kodeigr = '" & KDIGR & "' ")
            sb.AppendLine(" ) ")
        Else
            sb.AppendLine("Select '', ")
            sb.AppendLine("       CURRENT_DATE,  ")
            sb.AppendLine("	      CPM_NoPB, ")
            sb.AppendLine("	      CPM_TglPB, ")
            sb.AppendLine("	      CPM_PLUIDM, ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      'PLU TIDAK TERDAFTAR DI TBMASTER_PRODCRM', ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      CPM_QTY, ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      CPM_KodeToko, ")
            sb.AppendLine("	      '" & KDIGR & "', ")
            sb.AppendLine("	      '" & IP & "' ")
            sb.AppendLine("  From csv_pb_majalah ")
            sb.AppendLine(" Where not exists ")
            sb.AppendLine(" ( ")
            sb.AppendLine("    Select prc_pluigr ")
            sb.AppendLine("      From tbmaster_prodcrm  ")
            sb.AppendLine("     Where prc_pluidm = CPM_PLUIDM  ")
            sb.AppendLine("	      AND prc_group = 'I' ")
            sb.AppendLine("	      AND prc_kodeigr = '" & KDIGR & "' ")
            sb.AppendLine(" ) ")
        End If
        sb.AppendLine("   AND CPM_IP = '" & IP & "'")
        sb.AppendLine("   AND CPM_NoPB = '" & noPB & "'")
        sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")

        ExecQRY(sb.ToString, "ISI PLU TIDAK TERDAFTAR DI TBMASTER_PRODCRM")

        sb = New StringBuilder
        sb.AppendLine("INSERT Into TEMP_CETAKPB_TOLAKAN_IDM ")
        sb.AppendLine("( ")
        sb.AppendLine("   KOMI, ")
        sb.AppendLine("   TGL, ")
        sb.AppendLine("   NODOK, ")
        sb.AppendLine("   TGLDOK, ")
        sb.AppendLine("   PLU, ")
        sb.AppendLine("   PLUIGR, ")
        sb.AppendLine("   KETA, ")
        sb.AppendLine("   TAG, ")
        sb.AppendLine("   DESCR, ")
        sb.AppendLine("   QTYO, ")
        sb.AppendLine("   GROSS, ")
        sb.AppendLine("   KCAB, ")
        sb.AppendLine("   KODEIGR, ")
        sb.AppendLine("   REQ_ID ")
        sb.AppendLine(") ")
        sb.AppendLine("Select '', ")
        sb.AppendLine("       CURRENT_DATE,  ")
        sb.AppendLine("	      CPM_NoPB, ")
        sb.AppendLine("	      CPM_TglPB, ")
        sb.AppendLine("	      CPM_PLUIDM, ")
        sb.AppendLine("	      null, ")
        sb.AppendLine("	      'PLU IDM TIDAK MEMPUNYAI PLU INDOGROSIR', ")
        sb.AppendLine("	      null, ")
        sb.AppendLine("	      null, ")
        sb.AppendLine("	      CPM_QTY, ")
        sb.AppendLine("	      null, ")
        sb.AppendLine("	      CPM_KodeToko, ")
        sb.AppendLine("	      '" & KDIGR & "', ")
        sb.AppendLine("	      '" & IP & "' ")
        sb.AppendLine("  From CSV_PB_Majalah ")
        sb.AppendLine(" Where exists ")
        sb.AppendLine(" ( ")
        If kodeDCIDM <> "" Then
            sb.AppendLine("    Select idm_pluigr ")
            sb.AppendLine("      From tbmaster_pluidm  ")
            sb.AppendLine("     Where idm_pluidm = CPM_PLUIDM  ")
            sb.AppendLine("	      AND idm_kodeidm = '" & kodeDCIDM & "' ")
            sb.AppendLine("	      AND idm_kodeigr = '" & KDIGR & "' ")
            sb.AppendLine("       AND idm_PLUIGR IS NULL ")
        Else
            sb.AppendLine("    Select prc_pluigr ")
            sb.AppendLine("      From tbmaster_prodcrm  ")
            sb.AppendLine("     Where prc_pluidm = CPM_PLUIDM  ")
            sb.AppendLine("	      AND prc_group = 'I' ")
            sb.AppendLine("	      AND prc_kodeigr = '" & KDIGR & "' ")
            sb.AppendLine("       AND PRC_PLUIGR IS NULL ")
        End If
        sb.AppendLine(" ) ")
        sb.AppendLine("   AND CPM_IP = '" & IP & "'")
        sb.AppendLine("   AND CPM_NoPB = '" & noPB & "'")
        sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")

        ExecQRY(sb.ToString, "PLU IDM TIDAK MEMPUNYAI PLU INDOGROSIR")

        sb = New StringBuilder
        sb.AppendLine("INSERT Into TEMP_CETAKPB_TOLAKAN_IDM ")
        sb.AppendLine("( ")
        sb.AppendLine("   KOMI, ")
        sb.AppendLine("   TGL, ")
        sb.AppendLine("   NODOK, ")
        sb.AppendLine("   TGLDOK, ")
        sb.AppendLine("   PLU, ")
        sb.AppendLine("   PLUIGR, ")
        sb.AppendLine("   KETA, ")
        sb.AppendLine("   TAG, ")
        sb.AppendLine("   DESCR, ")
        sb.AppendLine("   QTYO, ")
        sb.AppendLine("   GROSS, ")
        sb.AppendLine("   KCAB, ")
        sb.AppendLine("   KODEIGR, ")
        sb.AppendLine("   REQ_ID ")
        sb.AppendLine(") ")
        If kodeDCIDM <> "" Then
            sb.AppendLine("Select '',  ")
            sb.AppendLine("       CURRENT_DATE,   ")
            sb.AppendLine("       CPM_NoPB,  ")
            sb.AppendLine("       CPM_TglPB,  ")
            sb.AppendLine("       CPM_PLUIDM,  ")
            sb.AppendLine("       idm_pluigr,  ")
            sb.AppendLine("       'PRODCRM DISCONTINUE Tag:ARNGX',  ")
            sb.AppendLine("       idm_kodetag,  ")
            sb.AppendLine("       null,  ")
            sb.AppendLine("       CPM_QTY,  ")
            sb.AppendLine("       null,  ")
            sb.AppendLine("       CPM_KodeToko,  ")
            sb.AppendLine("       '" & KDIGR & "',  ")
            sb.AppendLine("       '" & IP & "'  ")
            sb.AppendLine("  From CSV_PB_MAJALAH, tbmaster_pluidm  ")
            sb.AppendLine(" Where CPM_IP = '" & IP & "' ")
            sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
            sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY')    ")
            sb.AppendLine("   And idm_pluidm = CPM_PLUIDM   ")
            sb.AppendLine("   AND idm_kodeidm = '" & kodeDCIDM & "'  ")
            sb.AppendLine("   AND idm_kodeigr = '" & KDIGR & "' ")
            sb.AppendLine("   AND coalesce(idm_kodetag,'0') IN ('A','R','N','G','X') ")
        Else
            sb.AppendLine("Select '',  ")
            sb.AppendLine("       CURRENT_DATE,   ")
            sb.AppendLine("       CPM_NoPB,  ")
            sb.AppendLine("       CPM_TglPB,  ")
            sb.AppendLine("       CPM_PLUIDM,  ")
            sb.AppendLine("       prc_pluigr,  ")
            sb.AppendLine("       'PRODCRM DISCONTINUE Tag:ARNGX',  ")
            sb.AppendLine("       PRC_KodeTag,  ")
            sb.AppendLine("       null,  ")
            sb.AppendLine("       CPM_QTY,  ")
            sb.AppendLine("       null,  ")
            sb.AppendLine("       CPM_KodeToko,  ")
            sb.AppendLine("       '" & KDIGR & "',  ")
            sb.AppendLine("       '" & IP & "'  ")
            sb.AppendLine("  From CSV_PB_MAJALAH, tbmaster_prodcrm  ")
            sb.AppendLine(" Where CPM_IP = '" & IP & "' ")
            sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
            sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY')    ")
            sb.AppendLine("   And prc_pluidm = CPM_PLUIDM   ")
            sb.AppendLine("   AND prc_group = 'I'  ")
            sb.AppendLine("   AND prc_kodeigr = '" & KDIGR & "' ")
            sb.AppendLine("   AND coalesce(prc_KodeTag,'0') IN ('A','R','N','G','X') ")
        End If

        ExecQRY(sb.ToString, "PRODCRM DISCONTINUE Tag:ARNGX")

        sb = New StringBuilder
        sb.AppendLine("INSERT Into TEMP_CETAKPB_TOLAKAN_IDM ")
        sb.AppendLine("( ")
        sb.AppendLine("   KOMI, ")
        sb.AppendLine("   TGL, ")
        sb.AppendLine("   NODOK, ")
        sb.AppendLine("   TGLDOK, ")
        sb.AppendLine("   PLU, ")
        sb.AppendLine("   PLUIGR, ")
        sb.AppendLine("   KETA, ")
        sb.AppendLine("   TAG, ")
        sb.AppendLine("   DESCR, ")
        sb.AppendLine("   QTYO, ")
        sb.AppendLine("   GROSS, ")
        sb.AppendLine("   KCAB, ")
        sb.AppendLine("   KODEIGR, ")
        sb.AppendLine("   REQ_ID ")
        sb.AppendLine(") ")
        sb.AppendLine("Select '', ")
        sb.AppendLine("       CURRENT_DATE,  ")
        sb.AppendLine("	      CPM_NoPB, ")
        sb.AppendLine("	      CPM_TglPB, ")
        sb.AppendLine("	      CPM_PLUIDM, ")
        sb.AppendLine("	      IDM_PLUIGR, ")
        sb.AppendLine("	      'PLU IGR PADA PRODCRM TIDAK ADA DI PRODMAST', ")
        sb.AppendLine("	      null, ")
        sb.AppendLine("	      null, ")
        sb.AppendLine("	      CPM_QTY, ")
        sb.AppendLine("	      null, ")
        sb.AppendLine("	      CPM_KodeToko, ")
        sb.AppendLine("	      '" & KDIGR & "', ")
        sb.AppendLine("	      '" & IP & "' ")
        sb.AppendLine("	 FROM csv_pb_MAJALAH,TBTEMP_PLUIDM  ")
        sb.AppendLine(" WHERE CPM_IP = '" & IP & "' ")
        sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
        sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   AND NOT EXISTS ")
        sb.AppendLine("   ( ")
        sb.AppendLine("   SELECT PLUIGR  ")
        sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM ")
        sb.AppendLine("	   WHERE REQ_ID = '" & IP & "'		  ")
        sb.AppendLine("		 AND NODOK = '" & noPB & "' ")
        sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("		 AND PLU = CPM_PLUIDM ")
        sb.AppendLine("   )    ")
        sb.AppendLine("   AND NOT EXISTS ")
        sb.AppendLine("   ( ")
        sb.AppendLine("      SELECT PRD_PRDCD  ")
        sb.AppendLine("        FROM tbMaster_ProdMast ")
        sb.AppendLine("       Where PRD_PRDCD = IDM_PLUIGR ")
        sb.AppendLine("         And PRD_KodeIGR = '" & KDIGR & "'  ")
        sb.AppendLine("   )    ")
        sb.AppendLine("   AND CPM_PLUIDM = IDM_PLUIDM ")
        If kodeDCIDM <> "" Then
            sb.AppendLine("   AND IDM_KDIDM = '" & kodeDCIDM & "' ")
        End If

        ExecQRY(sb.ToString, "PLU IGR PADA TBTEMP_PLUIDM TIDAK ADA DI PRODMAST")

        sb = New StringBuilder
        sb.AppendLine("INSERT Into TEMP_CETAKPB_TOLAKAN_IDM ")
        sb.AppendLine("( ")
        sb.AppendLine("   KOMI, ")
        sb.AppendLine("   TGL, ")
        sb.AppendLine("   NODOK, ")
        sb.AppendLine("   TGLDOK, ")
        sb.AppendLine("   PLU, ")
        sb.AppendLine("   PLUIGR, ")
        sb.AppendLine("   KETA, ")
        sb.AppendLine("   TAG, ")
        sb.AppendLine("   DESCR, ")
        sb.AppendLine("   QTYO, ")
        sb.AppendLine("   GROSS, ")
        sb.AppendLine("   KCAB, ")
        sb.AppendLine("   KODEIGR, ")
        sb.AppendLine("   REQ_ID ")
        sb.AppendLine(") ")
        If kodeDCIDM <> "" Then
            sb.AppendLine("Select '', ")
            sb.AppendLine("       CURRENT_DATE,  ")
            sb.AppendLine("	      CPM_NoPB, ")
            sb.AppendLine("	      CPM_TglPB, ")
            sb.AppendLine("	      CPM_PLUIDM, ")
            sb.AppendLine("	      IDM_PLUIGR, ")
            sb.AppendLine("	      'AVG.COST IS NULL', ")
            sb.AppendLine("	      PRD_KodeTag, ")
            sb.AppendLine("	      SUBSTR(PRD_DESKRIPSIPANJANG,1,60), ")
            sb.AppendLine("	      CPM_QTY, ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      CPM_KodeToko, ")
            sb.AppendLine("	      '" & KDIGR & "', ")
            sb.AppendLine("	      '" & IP & "' ")
            sb.AppendLine("	 FROM csv_pb_majalah, TBMASTER_PRODMAST,tbMaster_Pluidm ")
            sb.AppendLine(" WHERE CPM_IP = '" & IP & "' ")
            sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
            sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("   AND NOT EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("   SELECT PLUIGR  ")
            sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM ")
            sb.AppendLine("	   WHERE REQ_ID = '" & IP & "'		  ")
            sb.AppendLine("		 AND NODOK = '" & noPB & "' ")
            sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("		 AND PLU = CPM_PLUIDM ")
            sb.AppendLine("   )    ")
            sb.AppendLine("   AND NOT EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("      SELECT ST_AvgCost  ")
            sb.AppendLine("        FROM tbMaster_Stock  ")
            sb.AppendLine("       Where ST_PRDCD Like SUBSTR(IDM_PLUIGR,1,6)||'%' ")
            sb.AppendLine("         And ST_Lokasi = '01'  ")
            sb.AppendLine("         And ST_KodeIGR = '" & KDIGR & "'  ")
            sb.AppendLine("         And ST_AvgCost IS NOT NULL ")
            sb.AppendLine("   )    ")
            sb.AppendLine("   AND PRD_KODEIGR = IDM_KODEIGR ")
            sb.AppendLine("   AND CPM_PLUIDM = IDM_PLUIDM ")
            sb.AppendLine("   AND IDM_KODEIDM = '" & kodeDCIDM & "' ")
            sb.AppendLine("   AND PRD_PRDCD = IDM_PLUIGR ")
        Else
            sb.AppendLine("Select '', ")
            sb.AppendLine("       CURRENT_DATE,  ")
            sb.AppendLine("	      CPM_NoPB, ")
            sb.AppendLine("	      CPM_TglPB, ")
            sb.AppendLine("	      CPM_PLUIDM, ")
            sb.AppendLine("	      PRC_PLUIGR, ")
            sb.AppendLine("	      'AVG.COST IS NULL', ")
            sb.AppendLine("	      PRD_KodeTag, ")
            sb.AppendLine("	      SUBSTR(PRD_DESKRIPSIPANJANG,1,60), ")
            sb.AppendLine("	      CPM_QTY, ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      CPM_KodeToko, ")
            sb.AppendLine("	      '" & KDIGR & "', ")
            sb.AppendLine("	      '" & IP & "' ")
            sb.AppendLine("	 FROM csv_pb_majalah, TBMASTER_PRODMAST,tbMaster_Prodcrm ")
            sb.AppendLine(" WHERE CPM_IP = '" & IP & "' ")
            sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
            sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("   AND NOT EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("   SELECT PLUIGR  ")
            sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM ")
            sb.AppendLine("	   WHERE REQ_ID = '" & IP & "'		  ")
            sb.AppendLine("		 AND NODOK = '" & noPB & "' ")
            sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("		 AND PLU = CPM_PLUIDM ")
            sb.AppendLine("   )    ")
            sb.AppendLine("   AND NOT EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("      SELECT ST_AvgCost  ")
            sb.AppendLine("        FROM tbMaster_Stock  ")
            sb.AppendLine("       Where ST_PRDCD Like SUBSTR(PRC_PLUIGR,1,6)||'%' ")
            sb.AppendLine("         And ST_Lokasi = '01'  ")
            sb.AppendLine("         And ST_KodeIGR = '" & KDIGR & "'  ")
            sb.AppendLine("         And ST_AvgCost IS NOT NULL ")
            sb.AppendLine("   )    ")
            sb.AppendLine("   AND PRD_KODEIGR = PRC_KODEIGR ")
            sb.AppendLine("   AND CPM_PLUIDM = PRC_PLUIDM ")
            sb.AppendLine("   AND PRC_GROUP = 'I' ")
            sb.AppendLine("   AND PRD_PRDCD = PRC_PLUIGR ")
        End If

        ExecQRY(sb.ToString, "AVG.COST <= 0 - 1")

        sb = New StringBuilder
        sb.AppendLine("INSERT Into TEMP_CETAKPB_TOLAKAN_IDM ")
        sb.AppendLine("( ")
        sb.AppendLine("   KOMI, ")
        sb.AppendLine("   TGL, ")
        sb.AppendLine("   NODOK, ")
        sb.AppendLine("   TGLDOK, ")
        sb.AppendLine("   PLU, ")
        sb.AppendLine("   PLUIGR, ")
        sb.AppendLine("   KETA, ")
        sb.AppendLine("   TAG, ")
        sb.AppendLine("   DESCR, ")
        sb.AppendLine("   QTYO, ")
        sb.AppendLine("   GROSS, ")
        sb.AppendLine("   KCAB, ")
        sb.AppendLine("   KODEIGR, ")
        sb.AppendLine("   REQ_ID ")
        sb.AppendLine(") ")
        If kodeDCIDM <> "" Then
            sb.AppendLine("Select '', ")
            sb.AppendLine("       CURRENT_DATE,  ")
            sb.AppendLine("	      CPM_NoPB, ")
            sb.AppendLine("	      CPM_TglPB, ")
            sb.AppendLine("	      CPM_PLUIDM, ")
            sb.AppendLine("	      IDM_PLUIGR, ")
            sb.AppendLine("	      'AVG.COST <= 100', ")
            sb.AppendLine("	      PRD_KodeTag, ")
            sb.AppendLine("	      SUBSTR(PRD_DESKRIPSIPANJANG,1,60), ")
            sb.AppendLine("	      CPM_QTY, ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      CPM_KodeToko, ")
            sb.AppendLine("	      '" & KDIGR & "', ")
            sb.AppendLine("	      '" & IP & "' ")
            sb.AppendLine("	 FROM csv_pb_majalah, TBMASTER_PRODMAST,tbMaster_Pluidm ")
            sb.AppendLine(" WHERE CPM_IP = '" & IP & "' ")
            sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
            sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("   AND NOT EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("   SELECT PLUIGR  ")
            sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM ")
            sb.AppendLine("	   WHERE REQ_ID = '" & IP & "'		  ")
            sb.AppendLine("		 AND NODOK = '" & noPB & "' ")
            sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("		 AND PLU = CPM_PLUIDM ")
            sb.AppendLine("   )    ")
            sb.AppendLine("   AND EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("      SELECT ST_AvgCost  ")
            sb.AppendLine("        FROM tbMaster_Stock  ")
            sb.AppendLine("       Where ST_PRDCD Like SUBSTR(IDM_PLUIGR,1,6)||'%' ")
            sb.AppendLine("         And ST_Lokasi = '01'  ")
            sb.AppendLine("         And ST_KodeIGR = '" & KDIGR & "'  ")
            sb.AppendLine("         And coalesce(ST_AvgCost,0) <= 100 ")
            sb.AppendLine("   )    ")
            sb.AppendLine("   AND PRD_KODEIGR = IDM_KODEIGR ")
            sb.AppendLine("   AND CPM_PLUIDM = IDM_PLUIDM ")
            sb.AppendLine("   AND IDM_KODEIDM = '" & kodeDCIDM & "' ")
            sb.AppendLine("   AND PRD_PRDCD = IDM_PLUIGR ")
        Else
            sb.AppendLine("Select '', ")
            sb.AppendLine("       CURRENT_DATE,  ")
            sb.AppendLine("	      CPM_NoPB, ")
            sb.AppendLine("	      CPM_TglPB, ")
            sb.AppendLine("	      CPM_PLUIDM, ")
            sb.AppendLine("	      PRC_PLUIGR, ")
            sb.AppendLine("	      'AVG.COST <= 100', ")
            sb.AppendLine("	      PRD_KodeTag, ")
            sb.AppendLine("	      SUBSTR(PRD_DESKRIPSIPANJANG,1,60), ")
            sb.AppendLine("	      CPM_QTY, ")
            sb.AppendLine("	      null, ")
            sb.AppendLine("	      CPM_KodeToko, ")
            sb.AppendLine("	      '" & KDIGR & "', ")
            sb.AppendLine("	      '" & IP & "' ")
            sb.AppendLine("	 FROM csv_pb_majalah, TBMASTER_PRODMAST,tbMaster_Prodcrm ")
            sb.AppendLine(" WHERE CPM_IP = '" & IP & "' ")
            sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
            sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("   AND NOT EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("   SELECT PLUIGR  ")
            sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM ")
            sb.AppendLine("	   WHERE REQ_ID = '" & IP & "'		  ")
            sb.AppendLine("		 AND NODOK = '" & noPB & "' ")
            sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("		 AND PLU = CPM_PLUIDM ")
            sb.AppendLine("   )    ")
            sb.AppendLine("   AND EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("      SELECT ST_AvgCost  ")
            sb.AppendLine("        FROM tbMaster_Stock  ")
            sb.AppendLine("       Where ST_PRDCD Like SUBSTR(PRC_PLUIGR,1,6)||'%' ")
            sb.AppendLine("         And ST_Lokasi = '01'  ")
            sb.AppendLine("         And ST_KodeIGR = '" & KDIGR & "'  ")
            sb.AppendLine("         And coalesce(ST_AvgCost,0) <= 100 ")
            sb.AppendLine("   )    ")
            sb.AppendLine("   AND PRD_KODEIGR = PRC_KODEIGR ")
            sb.AppendLine("   AND CPM_PLUIDM = PRC_PLUIDM ")
            sb.AppendLine("   AND PRC_GROUP = 'I' ")
            sb.AppendLine("   AND PRD_PRDCD = PRC_PLUIGR ")
        End If

        ExecQRY(sb.ToString, "AVG.COST <= 0 - 2 ")

        Application.DoEvents()
        progress.Value = 25
        sb = New StringBuilder
        sb.AppendLine("Select coalesce(COUNT(1),0)  ")
        sb.AppendLine("  From information_schema.columns ")
        sb.AppendLine(" Where UPPER(table_name) = 'TEMP_CETAKPB_TOLAKAN_IDM2' ")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        jum = cmd.ExecuteScalar.ToString

        If jum = 0 Then
            sb = New StringBuilder
            sb.AppendLine("CREATE TABLE TEMP_CETAKPB_TOLAKAN_IDM2 ")
            sb.AppendLine("AS ")
            sb.AppendLine("SELECT KOMI, ")
            sb.AppendLine("       TGL, ")
            sb.AppendLine("       NODOK, ")
            sb.AppendLine("       TGLDOK, ")
            sb.AppendLine("       PLU, ")
            sb.AppendLine("       PLUIGR, ")
            sb.AppendLine("       KETA, ")
            sb.AppendLine("       PRD_KODETAG AS TAG, ")
            sb.AppendLine("       DESCR, ")
            sb.AppendLine("       QTYO, ")
            sb.AppendLine("       KCAB, ")
            sb.AppendLine("       KODEIGR, ")
            sb.AppendLine("       REQ_ID ")
            sb.AppendLine("FROM ")
            sb.AppendLine("( ")
            If kodeDCIDM <> "" Then
                sb.AppendLine("Select '' as KOMI,  ")
                sb.AppendLine("       CURRENT_DATE as TGL,   ")
                sb.AppendLine("	      CPM_NoPB as NODOK,  ")
                sb.AppendLine("	      CPM_TglPB as TGLDOK,  ")
                sb.AppendLine("	      CPM_PLUIDM as PLU,  ")
                sb.AppendLine("	      IDM_PLUIGR as PLUIGR,  ")
                sb.AppendLine("	      'PRODMAST IGR DISCONTINUE Tag:NXQ' as KETA, ")
                sb.AppendLine("	      SUBSTR(PRD_DESKRIPSIPANJANG,1,60) as DESCR,  ")
                sb.AppendLine("	      CPM_QTY as QTYO,  ")
                sb.AppendLine("	      CPM_KodeToko as KCAB,  ")
                sb.AppendLine("	      '" & KDIGR & "' as KODEIGR,  ")
                sb.AppendLine("	      '" & IP & "' as REQ_ID, ")
                sb.AppendLine("        Min(PRD_PRDCD) AS PLUKECIL  ")
                sb.AppendLine("	 FROM CSV_PB_MAJALAH, TBMASTER_PRODMAST, tbMaster_Pluidm ")
                sb.AppendLine(" WHERE CPM_IP = '" & IP & "'  ")
                sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
                sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
                sb.AppendLine("   AND NOT EXISTS  ")
                sb.AppendLine("   (  ")
                sb.AppendLine("   SELECT PLUIGR   ")
                sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM  ")
                sb.AppendLine("	   WHERE REQ_ID = '" & IP & "' ")
                sb.AppendLine("		 AND NODOK = '" & noPB & "'  ")
                sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("		 AND PLU = CPM_PLUIDM  ")
                sb.AppendLine("   )     ")
                sb.AppendLine("   AND PRD_KODEIGR = IDM_KODEIGR  ")
                sb.AppendLine("   AND CPM_PLUIDM = IDM_PLUIDM  ")
                sb.AppendLine("   AND IDM_KODEIDM = '" & kodeDCIDM & "'  ")
                sb.AppendLine("   AND PRD_PRDCD like SubStr(IDM_PLUIGR,1,6)||'%'  ")
                sb.AppendLine("   AND SubStr(PRD_PRDCD,-1,1) <> '0'    ")
                sb.AppendLine(" GROUP BY CPM_NoPB,  ")
                sb.AppendLine("	        CPM_TglPB,  ")
                sb.AppendLine("	        CPM_PLUIDM,  ")
                sb.AppendLine("	        IDM_PLUIGR,	 ")
                sb.AppendLine("	        SUBSTR(PRD_DESKRIPSIPANJANG,1,60),  ")
                sb.AppendLine("	        CPM_QTY,  ")
                sb.AppendLine("	        CPM_KodeToko ")
                sb.AppendLine(") X,tbMaster_Prodmast ")
                sb.AppendLine("WHERE PRD_PRDCD = PLUKECIL ")
                sb.AppendLine("  AND PRD_KodeTag IN ('N','X','Q') ")
            Else
                sb.AppendLine("Select '' as KOMI,  ")
                sb.AppendLine("       CURRENT_DATE as TGL,   ")
                sb.AppendLine("	      CPM_NoPB as NODOK,  ")
                sb.AppendLine("	      CPM_TglPB as TGLDOK,  ")
                sb.AppendLine("	      CPM_PLUIDM as PLU,  ")
                sb.AppendLine("	      PRC_PLUIGR as PLUIGR,  ")
                sb.AppendLine("	      'PRODMAST IGR DISCONTINUE Tag:NXQ' as KETA, ")
                sb.AppendLine("	      SUBSTR(PRD_DESKRIPSIPANJANG,1,60) as DESCR,  ")
                sb.AppendLine("	      CPM_QTY as QTYO,  ")
                sb.AppendLine("	      CPM_KodeToko as KCAB,  ")
                sb.AppendLine("	      '" & KDIGR & "' as KODEIGR,  ")
                sb.AppendLine("	      '" & IP & "' as REQ_ID, ")
                sb.AppendLine("        Min(PRD_PRDCD) AS PLUKECIL  ")
                sb.AppendLine("	 FROM CSV_PB_MAJALAH, TBMASTER_PRODMAST,tbMaster_Prodcrm ")
                sb.AppendLine(" WHERE CPM_IP = '" & IP & "'  ")
                sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
                sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
                sb.AppendLine("   AND NOT EXISTS  ")
                sb.AppendLine("   (  ")
                sb.AppendLine("   SELECT PLUIGR   ")
                sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM  ")
                sb.AppendLine("	   WHERE REQ_ID = '" & IP & "' ")
                sb.AppendLine("		 AND NODOK = '" & noPB & "'  ")
                sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("		 AND PLU = CPM_PLUIDM  ")
                sb.AppendLine("   )     ")
                sb.AppendLine("   AND PRD_KODEIGR = PRC_KODEIGR  ")
                sb.AppendLine("   AND CPM_PLUIDM = PRC_PLUIDM  ")
                sb.AppendLine("   AND PRC_GROUP = 'I'  ")
                sb.AppendLine("   AND PRD_PRDCD like SubStr(PRC_PLUIGR,1,6)||'%'  ")
                sb.AppendLine("   AND SubStr(PRD_PRDCD,-1,1) <> '0'    ")
                sb.AppendLine(" GROUP BY CPM_NoPB,  ")
                sb.AppendLine("	        CPM_TglPB,  ")
                sb.AppendLine("	        CPM_PLUIDM,  ")
                sb.AppendLine("	        PRC_PLUIGR,	 ")
                sb.AppendLine("	        SUBSTR(PRD_DESKRIPSIPANJANG,1,60),  ")
                sb.AppendLine("	        CPM_QTY,  ")
                sb.AppendLine("	        CPM_KodeToko ")
                sb.AppendLine(") X,tbMaster_Prodmast ")
                sb.AppendLine("WHERE PRD_PRDCD = PLUKECIL ")
                sb.AppendLine("  AND PRD_KodeTag IN ('N','X','Q') ")
            End If

            ExecQRY(sb.ToString, "CREATE TABLE TEMP_CETAKPB_TOLAKAN_IDM2-PRODMAST-NXQ")
        Else
            sb = New StringBuilder
            sb.AppendLine("DELETE FROM TEMP_CETAKPB_TOLAKAN_IDM2 ")
            sb.AppendLine(" WHERE REQ_ID = '" & IP & "' ")

            ExecQRY(sb.ToString, "DELETE FROM TEMP_CETAKPB_TOLAKAN_IDM2")

            sb = New StringBuilder
            sb.AppendLine("INSERT INTO TEMP_CETAKPB_TOLAKAN_IDM2 ")
            sb.AppendLine("SELECT KOMI, ")
            sb.AppendLine("       TGL, ")
            sb.AppendLine("       NODOK, ")
            sb.AppendLine("       TGLDOK, ")
            sb.AppendLine("       PLU, ")
            sb.AppendLine("       PLUIGR, ")
            sb.AppendLine("       KETA, ")
            sb.AppendLine("       PRD_KODETAG AS TAG, ")
            sb.AppendLine("       DESCR, ")
            sb.AppendLine("       QTYO, ")
            sb.AppendLine("       KCAB, ")
            sb.AppendLine("       KODEIGR, ")
            sb.AppendLine("       REQ_ID ")
            sb.AppendLine("FROM ")
            sb.AppendLine("( ")
            If kodeDCIDM <> "" Then
                sb.AppendLine("Select '' as KOMI,  ")
                sb.AppendLine("       CURRENT_DATE as TGL,   ")
                sb.AppendLine("	      CPM_NoPB as NODOK,  ")
                sb.AppendLine("	      CPM_TglPB as TGLDOK,  ")
                sb.AppendLine("	      CPM_PLUIDM as PLU,  ")
                sb.AppendLine("	      IDM_PLUIGR as PLUIGR,  ")
                sb.AppendLine("	      'PRODMAST IGR DISCONTINUE Tag:NXQ' as KETA, ")
                sb.AppendLine("	      SUBSTR(PRD_DESKRIPSIPANJANG,1,60) as DESCR,  ")
                sb.AppendLine("	      CPM_QTY as QTYO,  ")
                sb.AppendLine("	      CPM_KodeToko as KCAB,  ")
                sb.AppendLine("	      '" & KDIGR & "' as KODEIGR,  ")
                sb.AppendLine("	      '" & IP & "' as REQ_ID, ")
                sb.AppendLine("        Min(PRD_PRDCD) AS PLUKECIL  ")
                sb.AppendLine("	 FROM CSV_PB_MAJALAH, TBMASTER_PRODMAST,tbMaster_Pluidm  ")
                sb.AppendLine(" WHERE CPM_IP = '" & IP & "'  ")
                sb.AppendLine("   AND CPM_KodeToko = '" & KodeToko & "'  ")
                sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
                sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("   AND NOT EXISTS  ")
                sb.AppendLine("   (  ")
                sb.AppendLine("   SELECT PLUIGR   ")
                sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM  ")
                sb.AppendLine("	   WHERE REQ_ID = '" & IP & "' ")
                sb.AppendLine("		 AND NODOK = '" & noPB & "'  ")
                sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("		 AND PLU = CPM_PLUIDM  ")
                sb.AppendLine("   )     ")
                sb.AppendLine("   AND NOT EXISTS  ")
                sb.AppendLine("   (  ")
                sb.AppendLine("   SELECT PLUIGR   ")
                sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM2  ")
                sb.AppendLine("	   WHERE REQ_ID = '" & IP & "' ")
                sb.AppendLine("		 AND NODOK = '" & noPB & "'  ")
                sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("		 AND PLU = CPM_PLUIDM  ")
                sb.AppendLine("   )     ")
                sb.AppendLine("   AND PRD_KODEIGR = IDM_KODEIGR  ")
                sb.AppendLine("   AND CPM_PLUIDM = IDM_PLUIDM  ")
                sb.AppendLine("   AND IDM_KODEIDM = '" & kodeDCIDM & "'  ")
                sb.AppendLine("   AND PRD_PRDCD like SubStr(IDM_PLUIGR,1,6)||'%'  ")
                sb.AppendLine("   AND SubStr(PRD_PRDCD,-1,1) <> '0'    ")
                sb.AppendLine(" GROUP BY CPM_NoPB,  ")
                sb.AppendLine("	        CPM_TglPB,  ")
                sb.AppendLine("	        CPM_PLUIDM,  ")
                sb.AppendLine("	        IDM_PLUIGR,	 ")
                sb.AppendLine("	        SUBSTR(PRD_DESKRIPSIPANJANG,1,60),  ")
                sb.AppendLine("	        CPM_QTY,  ")
                sb.AppendLine("	        CPM_KodeToko ")
                sb.AppendLine(") X,tbMaster_Prodmast ")
                sb.AppendLine("WHERE PRD_PRDCD = PLUKECIL ")
                sb.AppendLine("  AND PRD_KodeTag IN ('N','X','Q') ")
            Else
                sb.AppendLine("Select '' as KOMI,  ")
                sb.AppendLine("       CURRENT_DATE as TGL,   ")
                sb.AppendLine("	      CPM_NoPB as NODOK,  ")
                sb.AppendLine("	      CPM_TglPB as TGLDOK,  ")
                sb.AppendLine("	      CPM_PLUIDM as PLU,  ")
                sb.AppendLine("	      PRC_PLUIGR as PLUIGR,  ")
                sb.AppendLine("	      'PRODMAST IGR DISCONTINUE Tag:NXQ' as KETA, ")
                sb.AppendLine("	      SUBSTR(PRD_DESKRIPSIPANJANG,1,60) as DESCR,  ")
                sb.AppendLine("	      CPM_QTY as QTYO,  ")
                sb.AppendLine("	      CPM_KodeToko as KCAB,  ")
                sb.AppendLine("	      '" & KDIGR & "' as KODEIGR,  ")
                sb.AppendLine("	      '" & IP & "' as REQ_ID, ")
                sb.AppendLine("        Min(PRD_PRDCD) AS PLUKECIL  ")
                sb.AppendLine("	 FROM CSV_PB_MAJALAH, TBMASTER_PRODMAST,tbMaster_Prodcrm  ")
                sb.AppendLine(" WHERE CPM_IP = '" & IP & "'  ")
                sb.AppendLine("   AND CPM_KodeToko = '" & KodeToko & "'  ")
                sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
                sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("   AND NOT EXISTS  ")
                sb.AppendLine("   (  ")
                sb.AppendLine("   SELECT PLUIGR   ")
                sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM  ")
                sb.AppendLine("	   WHERE REQ_ID = '" & IP & "' ")
                sb.AppendLine("		 AND NODOK = '" & noPB & "'  ")
                sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("		 AND PLU = CPM_PLUIDM  ")
                sb.AppendLine("   )     ")
                sb.AppendLine("   AND NOT EXISTS  ")
                sb.AppendLine("   (  ")
                sb.AppendLine("   SELECT PLUIGR   ")
                sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM2  ")
                sb.AppendLine("	   WHERE REQ_ID = '" & IP & "' ")
                sb.AppendLine("		 AND NODOK = '" & noPB & "'  ")
                sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("		 AND PLU = CPM_PLUIDM  ")
                sb.AppendLine("   )     ")
                sb.AppendLine("   AND PRD_KODEIGR = PRC_KODEIGR  ")
                sb.AppendLine("   AND CPM_PLUIDM = PRC_PLUIDM  ")
                sb.AppendLine("   AND PRC_GROUP = 'I'  ")
                sb.AppendLine("   AND PRD_PRDCD like SubStr(PRC_PLUIGR,1,6)||'%'  ")
                sb.AppendLine("   AND SubStr(PRD_PRDCD,-1,1) <> '0'    ")
                sb.AppendLine(" GROUP BY CPM_NoPB,  ")
                sb.AppendLine("	        CPM_TglPB,  ")
                sb.AppendLine("	        CPM_PLUIDM,  ")
                sb.AppendLine("	        PRC_PLUIGR,	                  	       ")
                sb.AppendLine("	        SUBSTR(PRD_DESKRIPSIPANJANG,1,60),  ")
                sb.AppendLine("	        CPM_QTY,  ")
                sb.AppendLine("	        CPM_KodeToko ")
                sb.AppendLine(") X,tbMaster_Prodmast ")
                sb.AppendLine("WHERE PRD_PRDCD = PLUKECIL ")
                sb.AppendLine("  AND PRD_KodeTag IN ('N','X','Q') ")
            End If

            ExecQRY(sb.ToString, "INSERT INTO TEMP_CETAKPB_TOLAKAN_IDM2 - 1-PRODMAST-NXQ")

            'TOLAKAN FLAGAKTIVASI = 'X'
            sb = New StringBuilder
            sb.AppendLine("INSERT INTO TEMP_CETAKPB_TOLAKAN_IDM2 ")
            sb.AppendLine("SELECT KOMI, ")
            sb.AppendLine("       TGL, ")
            sb.AppendLine("       NODOK, ")
            sb.AppendLine("       TGLDOK, ")
            sb.AppendLine("       PLU, ")
            sb.AppendLine("       PLUIGR, ")
            sb.AppendLine("       KETA, ")
            sb.AppendLine("       PRD_KODETAG AS TAG, ")
            sb.AppendLine("       DESCR, ")
            sb.AppendLine("       QTYO, ")
            sb.AppendLine("       KCAB, ")
            sb.AppendLine("       KODEIGR, ")
            sb.AppendLine("       REQ_ID ")
            sb.AppendLine("FROM ")
            sb.AppendLine("( ")
            If kodeDCIDM <> "" Then
                sb.AppendLine("Select '' as KOMI,  ")
                sb.AppendLine("       CURRENT_DATE as TGL,   ")
                sb.AppendLine("	      CPM_NoPB as NODOK,  ")
                sb.AppendLine("	      CPM_TglPB as TGLDOK,  ")
                sb.AppendLine("	      CPM_PLUIDM as PLU,  ")
                sb.AppendLine("	      IDM_PLUIGR as PLUIGR,  ")
                sb.AppendLine("	      'PRODMAST IGR FLAG AKTIVASI:X' as KETA, ")
                sb.AppendLine("	      SUBSTR(PRD_DESKRIPSIPANJANG,1,60) as DESCR,  ")
                sb.AppendLine("	      CPM_QTY as QTYO,  ")
                sb.AppendLine("	      CPM_KodeToko as KCAB,  ")
                sb.AppendLine("	      '" & KDIGR & "' as KODEIGR,  ")
                sb.AppendLine("	      '" & IP & "' as REQ_ID, ")
                sb.AppendLine("        Min(PRD_PRDCD) AS PLUKECIL  ")
                sb.AppendLine("	 FROM CSV_PB_MAJALAH, TBMASTER_PRODMAST,tbMaster_Pluidm  ")
                sb.AppendLine(" WHERE CPM_IP = '" & IP & "'  ")
                sb.AppendLine("   AND CPM_KodeToko = '" & KodeToko & "'  ")
                sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
                sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("   AND NOT EXISTS  ")
                sb.AppendLine("   (  ")
                sb.AppendLine("   SELECT PLUIGR   ")
                sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM  ")
                sb.AppendLine("	   WHERE REQ_ID = '" & IP & "' ")
                sb.AppendLine("		 AND NODOK = '" & noPB & "'  ")
                sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("		 AND PLU = CPM_PLUIDM  ")
                sb.AppendLine("   )     ")
                sb.AppendLine("   AND NOT EXISTS  ")
                sb.AppendLine("   (  ")
                sb.AppendLine("   SELECT PLUIGR   ")
                sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM2  ")
                sb.AppendLine("	   WHERE REQ_ID = '" & IP & "' ")
                sb.AppendLine("		 AND NODOK = '" & noPB & "'  ")
                sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("		 AND PLU = CPM_PLUIDM  ")
                sb.AppendLine("   )     ")
                sb.AppendLine("   AND PRD_KODEIGR = IDM_KODEIGR  ")
                sb.AppendLine("   AND CPM_PLUIDM = IDM_PLUIDM  ")
                sb.AppendLine("   AND IDM_KODEIDM = '" & kodeDCIDM & "'  ")
                sb.AppendLine("   AND PRD_PRDCD like SubStr(IDM_PLUIGR,1,6)||'%'  ")
                sb.AppendLine("   AND SubStr(PRD_PRDCD,-1,1) <> '0'    ")
                sb.AppendLine(" GROUP BY CPM_NoPB,  ")
                sb.AppendLine("	        CPM_TglPB,  ")
                sb.AppendLine("	        CPM_PLUIDM,  ")
                sb.AppendLine("	        IDM_PLUIGR,	 ")
                sb.AppendLine("	        SUBSTR(PRD_DESKRIPSIPANJANG,1,60),  ")
                sb.AppendLine("	        CPM_QTY,  ")
                sb.AppendLine("	        CPM_KodeToko ")
                sb.AppendLine(") X,tbMaster_Prodmast ")
                sb.AppendLine(", TBMASTER_FLAGAKT ")
                sb.AppendLine("WHERE PRD_PRDCD = PLUKECIL ")
                sb.AppendLine("  AND prd_flag_aktivasi IN ('X') ")
                sb.AppendLine("  AND prd_flag_aktivasi = AKT_KODEFLAG ")
            Else
                sb.AppendLine("Select '' as KOMI,  ")
                sb.AppendLine("       CURRENT_DATE as TGL,   ")
                sb.AppendLine("	      CPM_NoPB as NODOK,  ")
                sb.AppendLine("	      CPM_TglPB as TGLDOK,  ")
                sb.AppendLine("	      CPM_PLUIDM as PLU,  ")
                sb.AppendLine("	      PRC_PLUIGR as PLUIGR,  ")
                sb.AppendLine("	      'PRODMAST IGR FLAG AKTIVASI:X' as KETA, ")
                sb.AppendLine("	      SUBSTR(PRD_DESKRIPSIPANJANG,1,60) as DESCR,  ")
                sb.AppendLine("	      CPM_QTY as QTYO,  ")
                sb.AppendLine("	      CPM_KodeToko as KCAB,  ")
                sb.AppendLine("	      '" & KDIGR & "' as KODEIGR,  ")
                sb.AppendLine("	      '" & IP & "' as REQ_ID, ")
                sb.AppendLine("        Min(PRD_PRDCD) AS PLUKECIL  ")
                sb.AppendLine("	 FROM CSV_PB_MAJALAH, TBMASTER_PRODMAST,tbMaster_Prodcrm  ")
                sb.AppendLine(" WHERE CPM_IP = '" & IP & "'  ")
                sb.AppendLine("   AND CPM_KodeToko = '" & KodeToko & "'  ")
                sb.AppendLine("   AND CPM_NoPB = '" & noPB & "' ")
                sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("   AND NOT EXISTS  ")
                sb.AppendLine("   (  ")
                sb.AppendLine("   SELECT PLUIGR   ")
                sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM  ")
                sb.AppendLine("	   WHERE REQ_ID = '" & IP & "' ")
                sb.AppendLine("		 AND NODOK = '" & noPB & "'  ")
                sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("		 AND PLU = CPM_PLUIDM  ")
                sb.AppendLine("   )     ")
                sb.AppendLine("   AND NOT EXISTS  ")
                sb.AppendLine("   (  ")
                sb.AppendLine("   SELECT PLUIGR   ")
                sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM2  ")
                sb.AppendLine("	   WHERE REQ_ID = '" & IP & "' ")
                sb.AppendLine("		 AND NODOK = '" & noPB & "'  ")
                sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
                sb.AppendLine("		 AND PLU = CPM_PLUIDM  ")
                sb.AppendLine("   )     ")
                sb.AppendLine("   AND PRD_KODEIGR = PRC_KODEIGR  ")
                sb.AppendLine("   AND CPM_PLUIDM = PRC_PLUIDM  ")
                sb.AppendLine("   AND PRC_GROUP = 'I'  ")
                sb.AppendLine("   AND PRD_PRDCD like SubStr(PRC_PLUIGR,1,6)||'%'  ")
                sb.AppendLine("   AND SubStr(PRD_PRDCD,-1,1) <> '0'    ")
                sb.AppendLine(" GROUP BY CPM_NoPB,  ")
                sb.AppendLine("	        CPM_TglPB,  ")
                sb.AppendLine("	        CPM_PLUIDM,  ")
                sb.AppendLine("	        PRC_PLUIGR,	                  	       ")
                sb.AppendLine("	        SUBSTR(PRD_DESKRIPSIPANJANG,1,60),  ")
                sb.AppendLine("	        CPM_QTY,  ")
                sb.AppendLine("	        CPM_KodeToko ")
                sb.AppendLine(") X,tbMaster_Prodmast ")
                sb.AppendLine(", TBMASTER_FLAGAKT ")
                sb.AppendLine("WHERE PRD_PRDCD = PLUKECIL ")
                sb.AppendLine("  AND prd_flag_aktivasi IN ('X') ")
                sb.AppendLine("  AND prd_flag_aktivasi = AKT_KODEFLAG ")
            End If

            ExecQRY(sb.ToString, "INSERT INTO TEMP_CETAKPB_TOLAKAN_IDM2 - 1-FLAGAKTIVASI-X")
        End If

        sb = New StringBuilder
        sb.AppendLine("update TEMP_CETAKPB_TOLAKAN_IDM2 a set KOMI = b.TKO_KodeCustomer ")
        sb.AppendLine("from ( SELECT *   ")
        sb.AppendLine("       FROM TBMASTER_TOKOIGR ")
        sb.AppendLine(") b where a.KCAB = b.TKO_KODEOMI      ")
        sb.AppendLine("    AND a.REQ_ID = '" & IP & "'  ")
        sb.AppendLine("    AND a.NODOK = '" & noPB & "'  ")
        sb.AppendLine("    AND a.TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
        ExecQRY(sb.ToString, "MERGE INTO TEMP_CETAKPB_TOLAKAN_IDM2 - KOMI")

        sb = New StringBuilder
        sb.AppendLine("INSERT Into TEMP_CETAKPB_TOLAKAN_IDM ")
        sb.AppendLine("( ")
        sb.AppendLine("   KOMI, ")
        sb.AppendLine("   TGL, ")
        sb.AppendLine("   NODOK, ")
        sb.AppendLine("   TGLDOK, ")
        sb.AppendLine("   PLU, ")
        sb.AppendLine("   PLUIGR, ")
        sb.AppendLine("   KETA, ")
        sb.AppendLine("   TAG, ")
        sb.AppendLine("   DESCR, ")
        sb.AppendLine("   QTYO, ")
        sb.AppendLine("   GROSS, ")
        sb.AppendLine("   KCAB, ")
        sb.AppendLine("   KODEIGR, ")
        sb.AppendLine("   REQ_ID ")
        sb.AppendLine(") ")
        sb.AppendLine("Select KOMI, ")
        sb.AppendLine("       TGL, ")
        sb.AppendLine("       NODOK, ")
        sb.AppendLine("       TGLDOK, ")
        sb.AppendLine("       PLU, ")
        sb.AppendLine("       PLUIGR, ")
        sb.AppendLine("       KETA, ")
        sb.AppendLine("       TAG, ")
        sb.AppendLine("       DESCR, ")
        sb.AppendLine("       QTYO, ")
        sb.AppendLine("       ST_AVGCOST * QTYO as GROSS, ")
        sb.AppendLine("       KCAB, ")
        sb.AppendLine("       KODEIGR, ")
        sb.AppendLine("       REQ_ID ")
        sb.AppendLine("  FROM TEMP_CETAKPB_TOLAKAN_IDM2 IDM2,tbMaster_Stock ")
        sb.AppendLine(" Where ST_PRDCD Like SUBSTR(PLUIGR,1,6)||'%' ")
        sb.AppendLine("   And ST_Lokasi = '01' ")
        sb.AppendLine("   And coalesce(ST_RecordID,'0') <> '1' ")
        sb.AppendLine("   And REQ_ID = '" & IP & "' ")
        sb.AppendLine("   AND KCAB = '" & KodeToko & "' ")
        sb.AppendLine("   AND NODOK = '" & noPB & "' ")
        sb.AppendLine("   AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   AND NOT EXISTS ")
        sb.AppendLine("   ( ")
        sb.AppendLine("   SELECT PLUIGR  ")
        sb.AppendLine("	    FROM TEMP_CETAKPB_TOLAKAN_IDM IDM ")
        sb.AppendLine("	   WHERE REQ_ID = '" & IP & "'		  ")
        sb.AppendLine("		 AND NODOK = '" & noPB & "' ")
        sb.AppendLine("		 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("		 AND IDM.PLU = IDM2.PLU ")
        sb.AppendLine("   )    ")

        ExecQRY(sb.ToString, "INSERT Into TEMP_CETAKPB_TOLAKAN_IDM")

        '------------------------------------'
        '+ 03-07-2013 ISI TEMP_PB_IDMREADY2 +'
        '------------------------------------'
        sb = New StringBuilder
        sb.AppendLine("DELETE FROM TEMP_PBIDM_READY2 ")
        sb.AppendLine(" WHERE REQ_ID = '" & IP & "' ")

        ExecQRY(sb.ToString, "DELETE FROM TEMP_PBIDM_READY2")

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TEMP_PBIDM_READY2 ")
        If kodeDCIDM <> "" Then
            sb.AppendLine("Select '', ")
            sb.AppendLine("	      CPM_NoPB, ")
            sb.AppendLine("	      CPM_PLUIDM, ")
            sb.AppendLine("	      CPM_QTY, ")
            sb.AppendLine("	      CPM_KodeToko, ")
            sb.AppendLine("	      CPM_TglPB, ")
            sb.AppendLine("	      '', ")
            sb.AppendLine("	      CPM_IP, ")
            sb.AppendLine("	      CPM_FILENAME, ")
            sb.AppendLine("	      IDM_PLUIGR ")
            sb.AppendLine("  From CSV_PB_MAJALAH A, tbMaster_pluidm ")
            sb.AppendLine(" Where CPM_IP = '" & IP & "'   ")
            sb.AppendLine("   AND CPM_NoPB = '" & noPB & "'   ")
            sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("   AND NOT EXISTS   ")
            sb.AppendLine("           (   ")
            sb.AppendLine("              SELECT PLUIGR    ")
            sb.AppendLine("                FROM TEMP_CETAKPB_TOLAKAN_IDM   ")
            sb.AppendLine("               WHERE REQ_ID = '" & IP & "' ")
            sb.AppendLine("                 AND NODOK = '" & noPB & "'   ")
            sb.AppendLine("                 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
            sb.AppendLine("                 AND PLU = CPM_PLUIDM  ")
            sb.AppendLine("           )  ")
            sb.AppendLine("    AND IDM_KODEIDM = '" & kodeDCIDM & "'  ")
            sb.AppendLine("    AND IDM_pluidm = CPM_PLUIDM ")
            sb.AppendLine("    AND CPM_FLAG IS NULL ")
        Else
            sb.AppendLine("Select '', ")
            sb.AppendLine("	      CPM_NoPB, ")
            sb.AppendLine("	      CPM_PLUIDM, ")
            sb.AppendLine("	      CPM_QTY, ")
            sb.AppendLine("	      CPM_KodeToko, ")
            sb.AppendLine("	      CPM_TglPB, ")
            sb.AppendLine("	      '', ")
            sb.AppendLine("	      CPM_IP, ")
            sb.AppendLine("	      CPM_FILENAME, ")
            sb.AppendLine("	      PRC_PLUIGR ")
            sb.AppendLine("  From CSV_PB_MAJALAH A, tbMaster_prodcrm ")
            sb.AppendLine(" Where CPM_IP = '" & IP & "'   ")
            sb.AppendLine("   AND CPM_NoPB = '" & noPB & "'   ")
            sb.AppendLine("   AND CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("   AND NOT EXISTS   ")
            sb.AppendLine("           (   ")
            sb.AppendLine("              SELECT PLUIGR    ")
            sb.AppendLine("                FROM TEMP_CETAKPB_TOLAKAN_IDM   ")
            sb.AppendLine("               WHERE REQ_ID = '" & IP & "' ")
            sb.AppendLine("                 AND NODOK = '" & noPB & "'   ")
            sb.AppendLine("                 AND TGLDOK = to_date('" & tglPB & "','DD-MM-YYYY')  ")
            sb.AppendLine("                 AND PLU = CPM_PLUIDM  ")
            sb.AppendLine("           )  ")
            sb.AppendLine("    AND PRC_GROUP = 'I'  ")
            sb.AppendLine("    AND PRC_pluidm = CPM_PLUIDM ")
            sb.AppendLine("    AND CPM_FLAG IS NULL ")
        End If

        ExecQRY(sb.ToString, "INSERT INTO TEMP_PBIDM_READY2 ")

        Application.DoEvents()
        progress.Value = 30
        sb = New StringBuilder
        sb.AppendLine("Select coalesce(COUNT(1),0)  ")
        sb.AppendLine("  From information_schema.columns ")
        sb.AppendLine(" Where UPPER(table_name) = 'TEMP_PBIDM_READY' ")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        jum = cmd.ExecuteScalar.ToString

        If jum = 0 Then
            sb = New StringBuilder
            sb.AppendLine("CREATE TABLE TEMP_PBIDM_READY ")
            sb.AppendLine("AS     ")
            sb.AppendLine("Select E.*,ST_AvgCost as AVGCOST  ")
            sb.AppendLine("  From  ")
            sb.AppendLine("(     ")
            sb.AppendLine("    Select D.*,   ")
            sb.AppendLine("           CASE WHEN FracKarton = 1 THEN 0 ELSE FDQTYB / FracKarton END as QTYB,  ")
            sb.AppendLine("           CASE WHEN FracKarton = 1 THEN FDQTYB ELSE MOD(FDQTYB,FracKarton) END as QTYK,  ")
            sb.AppendLine("           CASE WHEN     ")
            sb.AppendLine("             CASE WHEN FracKarton = 1 THEN FDQTYB ELSE FDQTYB / FracKecil END < PRD_MinJual  ")
            sb.AppendLine("           THEN 'T'  ")
            sb.AppendLine("           ELSE '' END AS TolakMinJ      ")
            sb.AppendLine("      From  ")
            sb.AppendLine("    ( ")
            sb.AppendLine("    Select C.*,PRD_Unit as UnitKecil,PRD_Frac as FracKecil,PRD_MinJual ")
            sb.AppendLine("      From ")
            sb.AppendLine("    (         ")
            sb.AppendLine("        Select B.*, CASE WHEN min(prd_prdcd) IS NULL THEN PluKarton ELSE min(prd_prdcd) END as PLUKecil  ")
            sb.AppendLine("          From  ")
            sb.AppendLine("        (   ")

            sb.AppendLine("        Select A.FDRCID, ")
            sb.AppendLine("               A.FDNOUO, ")
            sb.AppendLine("               A.FDKODE, ")
            sb.AppendLine("               MAX(A.FDQTYB) as FDQTYB, ")
            sb.AppendLine("               A.FDKCAB, ")
            sb.AppendLine("               A.FDTGPB, ")
            sb.AppendLine("               A.FDKSUP, ")
            sb.AppendLine("               A.REQ_ID, ")
            sb.AppendLine("               A.NAMA_FILE, ")
            sb.AppendLine("               prd_deskripsipanjang as DESK, ")
            sb.AppendLine("               prd_flagbkp1 as BKP, ")
            sb.AppendLine("               prd_prdcd as PluKarton, ")
            sb.AppendLine("               prd_unit as UnitKarton, ")
            sb.AppendLine("               prd_frac as FracKarton ")
            sb.AppendLine("          From temp_pbidm_ready2 A   ") ', tbmaster_prodmast  ")
            sb.AppendLine("          join tbmaster_prodmast on prd_prdcd = prc_pluigr ")
            sb.AppendLine("         Where REQ_ID = '" & IP & "'   ")
            sb.AppendLine("           AND FDNOUO = '" & noPB & "'   ")
            sb.AppendLine("           AND FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            'sb.AppendLine("           AND prd_prdcd = prc_pluigr  ")

            sb.AppendLine("         GROUP By A.FDRCID,  ")
            sb.AppendLine("		          A.FDNOUO,  ")
            sb.AppendLine("				  A.FDKODE,  ")
            sb.AppendLine("				  A.FDTGPB,  ")
            sb.AppendLine("				  A.FDKCAB,  ")
            sb.AppendLine("				  A.FDKSUP,  ")
            sb.AppendLine("				  A.REQ_ID, ")
            sb.AppendLine("				  A.NAMA_FILE,  ")
            sb.AppendLine("				  prd_deskripsipanjang,  ")
            sb.AppendLine("				  prd_flagbkp1,  ")
            sb.AppendLine("				  prd_prdcd, ")
            sb.AppendLine("				  prd_unit, ")
            sb.AppendLine("				  prd_frac ")
            sb.AppendLine("        ) B, tbMaster_Prodmast  ")
            sb.AppendLine("         Where PRD_PRDCD <> SUBSTR(PLUKarton,1,6)||'0'  ")
            sb.AppendLine("           And PRD_PRDCD Like SUBSTR(PLUKarton,1,6)||'%'  ")
            sb.AppendLine("           AND coalesce(prd_KodeTag,'A') NOT IN ('N','X','Q') ")
            sb.AppendLine("         Group By fdrcid,  ")
            sb.AppendLine("               FDNOUO,  ")
            sb.AppendLine("               FDKODE,  ")
            sb.AppendLine("               FDQTYB,  ")
            sb.AppendLine("               FDKCAB,  ")
            sb.AppendLine("               FDTGPB,  ")
            sb.AppendLine("               fdksup,  ")
            sb.AppendLine("               REQ_ID,  ")
            sb.AppendLine("               nama_file,  ")
            sb.AppendLine("               Desk, ")
            sb.AppendLine("               PluKarton,  ")
            sb.AppendLine("               UnitKarton,  ")
            sb.AppendLine("               FracKarton,  ")
            sb.AppendLine("               BKP  ")
            sb.AppendLine("    ) C, tbMaster_prodmast  ")
            sb.AppendLine("    Where PRD_PRDCD = PluKecil ")
            sb.AppendLine("    )D         ")
            sb.AppendLine(") E, tbMaster_Stock  ")
            sb.AppendLine("Where ST_PRDCD = PLUKARTON  ")
            sb.AppendLine("  And ST_Lokasi = '01'  ")
            sb.AppendLine("  And coalesce(ST_RecordID,'0') <> '1' ")

            ExecQRY(sb.ToString, "CREATE TABLE TEMP_PBIDM_READY")
        Else
            sb = New StringBuilder
            sb.AppendLine("DELETE FROM TEMP_PBIDM_READY ")
            sb.AppendLine(" WHERE REQ_ID = '" & IP & "' ")

            ExecQRY(sb.ToString, "DELETE FROM TEMP_PBIDM_READY")

            sb = New StringBuilder
            sb.AppendLine("INSERT INTO TEMP_PBIDM_READY  ")
            sb.AppendLine("Select E.*,ST_AvgCost as AVGCOST  ")
            sb.AppendLine("  From  ")
            sb.AppendLine("(     ")
            sb.AppendLine("    Select D.*,   ")
            sb.AppendLine("           CASE WHEN FracKarton = 1 THEN 0 ELSE trunc(FDQTYB / FracKarton) END as QTYB,  ")
            sb.AppendLine("           CASE WHEN FracKarton = 1 THEN FDQTYB ELSE MOD(FDQTYB,FracKarton) END as QTYK,  ")
            sb.AppendLine("           CASE WHEN     ")
            sb.AppendLine("             CASE WHEN FracKarton = 1 THEN FDQTYB ELSE trunc(FDQTYB / FracKecil) END < PRD_MinJual  ")
            sb.AppendLine("           THEN 'T'  ")
            sb.AppendLine("           ELSE '' END AS TolakMinJ      ")
            sb.AppendLine("      From  ")
            sb.AppendLine("    ( ")
            sb.AppendLine("    Select C.*,PRD_Unit as UnitKecil,PRD_Frac as FracKecil,PRD_MinJual ")
            sb.AppendLine("      From ")
            sb.AppendLine("    (         ")
            sb.AppendLine("        Select B.*, CASE WHEN min(prd_prdcd) IS NULL THEN PluKarton ELSE min(prd_prdcd) END as PLUKecil  ")
            sb.AppendLine("          From  ")
            sb.AppendLine("        (   ")

            sb.AppendLine("        Select A.FDRCID, ")
            sb.AppendLine("               A.FDNOUO, ")
            sb.AppendLine("               A.FDKODE, ")
            sb.AppendLine("               MAX(A.FDQTYB) as FDQTYB, ")
            sb.AppendLine("               A.FDKCAB, ")
            sb.AppendLine("               A.FDTGPB, ")
            sb.AppendLine("               A.FDKSUP, ")
            sb.AppendLine("               A.REQ_ID, ")
            sb.AppendLine("               A.NAMA_FILE, ")
            sb.AppendLine("               prd_deskripsipanjang as DESK, ")
            sb.AppendLine("               prd_flagbkp1 as BKP, ")
            sb.AppendLine("               prd_prdcd as PluKarton, ")
            sb.AppendLine("               prd_unit as UnitKarton, ")
            sb.AppendLine("               prd_frac as FracKarton ")
            sb.AppendLine("          From temp_pbidm_ready2 A   ") ', tbmaster_prodmast  ")
            sb.AppendLine("          join tbmaster_prodmast on prd_prdcd = prc_pluigr ")
            sb.AppendLine("         Where REQ_ID = '" & IP & "'   ")
            sb.AppendLine("           AND FDNOUO = '" & noPB & "'   ")
            sb.AppendLine("           AND FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            'sb.AppendLine("           AND prd_prdcd = prc_pluigr  ")

            sb.AppendLine("         GROUP By A.FDRCID,  ")
            sb.AppendLine("		          A.FDNOUO,  ")
            sb.AppendLine("				  A.FDKODE,  ")
            sb.AppendLine("				  A.FDTGPB,  ")
            sb.AppendLine("				  A.FDKCAB,  ")
            sb.AppendLine("				  A.FDKSUP,  ")
            sb.AppendLine("				  A.REQ_ID, ")
            sb.AppendLine("				  A.NAMA_FILE,  ")
            sb.AppendLine("				  prd_deskripsipanjang,  ")
            sb.AppendLine("				  prd_flagbkp1,  ")
            sb.AppendLine("				  prd_prdcd, ")
            sb.AppendLine("				  prd_unit, ")
            sb.AppendLine("				  prd_frac ")
            sb.AppendLine("        ) B, tbMaster_Prodmast  ")
            sb.AppendLine("         Where PRD_PRDCD <> SUBSTR(PLUKarton,1,6)||'0'  ")
            sb.AppendLine("           And PRD_PRDCD Like SUBSTR(PLUKarton,1,6)||'%'  ")
            sb.AppendLine("           AND coalesce(prd_KodeTag,'A') NOT IN ('N','X','Q') ")
            sb.AppendLine("         Group By fdrcid,  ")
            sb.AppendLine("               FDNOUO,  ")
            sb.AppendLine("               FDKODE,  ")
            sb.AppendLine("               FDQTYB,  ")
            sb.AppendLine("               FDKCAB,  ")
            sb.AppendLine("               FDTGPB,  ")
            sb.AppendLine("               fdksup,  ")
            sb.AppendLine("               REQ_ID,  ")
            sb.AppendLine("               nama_file,  ")
            sb.AppendLine("               Desk, ")
            sb.AppendLine("               PluKarton,  ")
            sb.AppendLine("               UnitKarton,  ")
            sb.AppendLine("               FracKarton,  ")
            sb.AppendLine("               BKP  ")
            sb.AppendLine("    ) C, tbMaster_prodmast  ")
            sb.AppendLine("    Where PRD_PRDCD = PluKecil ")
            sb.AppendLine("    )D         ")
            sb.AppendLine(") E, tbMaster_Stock  ")
            sb.AppendLine("Where ST_PRDCD = PLUKARTON  ")
            sb.AppendLine("  And ST_Lokasi = '01'  ")
            sb.AppendLine("  And coalesce(ST_RecordID,'0') <> '1' ")

            ExecQRY(sb.ToString, "INSERT INTO TEMP_PBIDM_READY")
        End If

        '--------------'
        '+ 27-11-2013 +'
        '--------------'
        sb = New StringBuilder
        sb.AppendLine("UPDATE TEMP_PBIDM_READY ")
        sb.AppendLine("   SET QTYB = 0, ")
        sb.AppendLine("       QTYK = QTYK + QTYB * FRACKARTON ")
        sb.AppendLine(" WHERE REQ_ID = '" & IP & "'  ")
        sb.AppendLine("   AND FDNOUO = '" & noPB & "' ")
        sb.AppendLine("   AND FDTGPB= to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   AND QTYB > 0 ")
        sb.AppendLine("   AND EXISTS ")
        sb.AppendLine("       ( ")
        sb.AppendLine("	      Select LKS_PRDCD ")
        sb.AppendLine("		    From tbMaster_Lokasi, tbMaster_GroupRak ")
        sb.AppendLine("		   Where LKS_PRDCD = PLUKARTON ")
        sb.AppendLine("		     And GRR_KodeRak = LKS_KodeRak ")
        sb.AppendLine("			 And GRR_SubRak = LKS_KodeSubRak ")
        sb.AppendLine("			 And coalesce(GRR_FlagCetakan,'?') <> 'Y' ")
        sb.AppendLine("			 And GRR_GroupRak Like 'H%'  ")
        sb.AppendLine("			 And LKS_TipeRak Not Like 'S%' ")
        sb.AppendLine("	   ) ")

        ExecQRY(sb.ToString, "UPDATE TEMP_PBIDM_READY SUPAYA ITEM HANDHELD IN PIECES SEMUA")
        '--------------'
        '- 27-11-2013 -'
        '--------------'

        '--++ 05-04-2014 MINDAHIN SEMUA QTY KARTON KE PIECES UNTUK ITEM BULKY FRACTION
        sb = New StringBuilder
        sb.AppendLine("UPDATE TEMP_PBIDM_READY ")
        sb.AppendLine("   SET QTYB = 0, ")
        sb.AppendLine("       QTYK = QTYK + QTYB * FRACKARTON ")
        sb.AppendLine(" WHERE REQ_ID = '" & IP & "'  ")
        sb.AppendLine("   AND FDNOUO = '" & noPB & "' ")
        sb.AppendLine("   AND FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   AND QTYB > 0 ")
        sb.AppendLine("   AND EXISTS ")
        sb.AppendLine("       ( ")
        sb.AppendLine("	      Select LKS_PRDCD ")
        sb.AppendLine("		    From tbMaster_Lokasi, tbMaster_GroupRak ")
        sb.AppendLine("		   Where LKS_PRDCD = PLUKARTON ")
        sb.AppendLine("		     And GRR_KodeRak = LKS_KodeRak ")
        sb.AppendLine("			 And GRR_SubRak = LKS_KodeSubRak ")
        sb.AppendLine("			 And coalesce(GRR_FlagCetakan,'?') <> 'Y' ")
        sb.AppendLine("			 And LKS_NOID LIKE '%P' ")
        sb.AppendLine("			 And LKS_TipeRak Not Like 'S%' ")
        sb.AppendLine("	   ) ")

        ExecQRY(sb.ToString, "MINDAHIN SEMUA QTY KARTON KE PIECES UNTUK ITEM BULKY FRACTION")

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TEMP_CETAKPB_TOLAKAN_IDM ")
        sb.AppendLine("( ")
        sb.AppendLine("  KOMI, ")
        sb.AppendLine("  TGL, ")
        sb.AppendLine("  NODOK, ")
        sb.AppendLine("  TGLDOK, ")
        sb.AppendLine("  PLU, ")
        sb.AppendLine("  PLUIGR, ")
        sb.AppendLine("  KETA, ")
        sb.AppendLine("  TAG, ")
        sb.AppendLine("  DESCR, ")
        sb.AppendLine("  QTYO, ")
        sb.AppendLine("  GROSS, ")
        sb.AppendLine("  KCAB, ")
        sb.AppendLine("  KODEIGR, ")
        sb.AppendLine("  REQ_ID ")
        sb.AppendLine(") ")
        If kodeDCIDM <> "" Then
            sb.AppendLine("Select TKO_KodeCustomer, ")
            sb.AppendLine("       CURRENT_DATE, ")
            sb.AppendLine("	      FDNOUO, ")
            sb.AppendLine("	      TRUNC(FDTGPB), ")
            sb.AppendLine("	      IDM_PLUIDM, ")
            sb.AppendLine("	      PLUKECIL, ")
            sb.AppendLine("	      'PECAHAN BULKY', ")
            sb.AppendLine("	      PRD_KodeTag, ")
            sb.AppendLine("	      DESK, ")
            sb.AppendLine("	      QTYK, ")
            sb.AppendLine("	      QTYK * AVGCOST, ")
            sb.AppendLine("	      FDKCAB, ")
            sb.AppendLine("	      '" & KDIGR & "', ")
            sb.AppendLine("	      REQ_ID ")
            sb.AppendLine("  FROM TEMP_PBIDM_READY, TBMaster_Prodmast, tbMaster_Pluidm, tbMaster_TokoIGR ")
            sb.AppendLine(" WHERE REQ_ID = '" & IP & "'  ")
            sb.AppendLine("   AND FDNOUO = '" & noPB & "' ")
            sb.AppendLine("   AND FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("   AND QTYK > 0 ")
            sb.AppendLine("   AND EXISTS ")
            sb.AppendLine("       ( ")
            sb.AppendLine("	      Select LKS_PRDCD ")
            sb.AppendLine("		    From tbMaster_Lokasi, tbMaster_GroupRak ")
            sb.AppendLine("		   Where LKS_PRDCD = PLUKARTON ")
            sb.AppendLine("		     And GRR_KodeRak = LKS_KodeRak ")
            sb.AppendLine("			 And GRR_SubRak = LKS_KodeSubRak ")
            sb.AppendLine("			 And coalesce(GRR_FlagCetakan,'?') <> 'Y' ")
            sb.AppendLine("			 And LKS_NOID LIKE '%B' ")
            sb.AppendLine("			 And LKS_TipeRak Not Like 'S%' ")
            sb.AppendLine("	   ) ")
            sb.AppendLine("	  AND FRACKARTON > 1 ")
            sb.AppendLine("	  AND IDM_PLUIGR = PLUKARTON ")
            sb.AppendLine("	  AND PLUKECIL = PRD_PRDCD ")
            sb.AppendLine("	  AND FDKCAB = TKO_KODEOMI ")
        Else
            sb.AppendLine("Select TKO_KodeCustomer, ")
            sb.AppendLine("       CURRENT_DATE, ")
            sb.AppendLine("	      FDNOUO, ")
            sb.AppendLine("	      TRUNC(FDTGPB), ")
            sb.AppendLine("	      PRC_PLUIDM, ")
            sb.AppendLine("	      PLUKECIL, ")
            sb.AppendLine("	      'PECAHAN BULKY', ")
            sb.AppendLine("	      PRD_KodeTag, ")
            sb.AppendLine("	      DESK, ")
            sb.AppendLine("	      QTYK, ")
            sb.AppendLine("	      QTYK * AVGCOST, ")
            sb.AppendLine("	      FDKCAB, ")
            sb.AppendLine("	      '" & KDIGR & "', ")
            sb.AppendLine("	      REQ_ID ")
            sb.AppendLine("  FROM TEMP_PBIDM_READY, TBMaster_Prodmast, tbMaster_Prodcrm, tbMaster_TokoIGR ")
            sb.AppendLine(" WHERE REQ_ID = '" & IP & "'  ")
            sb.AppendLine("   AND FDNOUO = '" & noPB & "' ")
            sb.AppendLine("   AND FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("   AND QTYK > 0 ")
            sb.AppendLine("   AND EXISTS ")
            sb.AppendLine("       ( ")
            sb.AppendLine("	      Select LKS_PRDCD ")
            sb.AppendLine("		    From tbMaster_Lokasi, tbMaster_GroupRak ")
            sb.AppendLine("		   Where LKS_PRDCD = PLUKARTON ")
            sb.AppendLine("		     And GRR_KodeRak = LKS_KodeRak ")
            sb.AppendLine("			 And GRR_SubRak = LKS_KodeSubRak ")
            sb.AppendLine("			 And coalesce(GRR_FlagCetakan,'?') <> 'Y' ")
            sb.AppendLine("			 And LKS_NOID LIKE '%B' ")
            sb.AppendLine("			 And LKS_TipeRak Not Like 'S%' ")
            sb.AppendLine("	   ) ")
            sb.AppendLine("	  AND FRACKARTON > 1 ")
            sb.AppendLine("	  AND PRC_PLUIGR = PLUKARTON ")
            sb.AppendLine("	  AND PLUKECIL = PRD_PRDCD ")
            sb.AppendLine("	  AND FDKCAB = TKO_KODEOMI ")
        End If

        ExecQRY(sb.ToString, "MASUKKIN PECAHAN ITEM BULKY KE TEMP_CETAKPB_TOLAKAN_IDM")

        sb = New StringBuilder
        sb.AppendLine("DELETE FROM TEMP_PBIDM_READY ")
        sb.AppendLine(" WHERE REQ_ID = '" & IP & "'  ")
        sb.AppendLine("   AND FDNOUO = '" & noPB & "' ")
        sb.AppendLine("   AND FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   AND QTYK > 0 AND QTYB = 0 ")
        sb.AppendLine("   AND EXISTS ")
        sb.AppendLine("       ( ")
        sb.AppendLine("	      Select LKS_PRDCD ")
        sb.AppendLine("		    From tbMaster_Lokasi, tbMaster_GroupRak ")
        sb.AppendLine("		   Where LKS_PRDCD = PLUKARTON ")
        sb.AppendLine("		     And GRR_KodeRak = LKS_KodeRak ")
        sb.AppendLine("			 And GRR_SubRak = LKS_KodeSubRak ")
        sb.AppendLine("			 And coalesce(GRR_FlagCetakan,'?') <> 'Y' ")
        sb.AppendLine("			 And LKS_NOID LIKE '%B' ")
        sb.AppendLine("			 And LKS_TipeRak Not Like 'S%' ")
        sb.AppendLine("	   ) ")
        sb.AppendLine("	  AND FRACKARTON > 1 ")

        ExecQRY(sb.ToString, "HAPUS PECAHAN ITEM BULKY DI TEMP_PBIDM_READY")

        sb = New StringBuilder
        sb.AppendLine("UPDATE TEMP_PBIDM_READY ")
        sb.AppendLine("   SET QTYK = 0 ")
        sb.AppendLine(" WHERE REQ_ID = '" & IP & "' ")
        sb.AppendLine("   AND FDNOUO = '" & noPB & "' ")
        sb.AppendLine("   AND FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   AND QTYB > 0  ")
        sb.AppendLine("   AND EXISTS ")
        sb.AppendLine("       ( ")
        sb.AppendLine("	      Select LKS_PRDCD ")
        sb.AppendLine("		    From tbMaster_Lokasi, tbMaster_GroupRak ")
        sb.AppendLine("		   Where LKS_PRDCD = PLUKARTON ")
        sb.AppendLine("		     And GRR_KodeRak = LKS_KodeRak ")
        sb.AppendLine("			 And GRR_SubRak = LKS_KodeSubRak ")
        sb.AppendLine("			 And coalesce(GRR_FlagCetakan,'?') <> 'Y' ")
        sb.AppendLine("			 And LKS_NOID LIKE '%B' ")
        sb.AppendLine("			 And LKS_TipeRak Not Like 'S%' ")
        sb.AppendLine("	   ) ")
        sb.AppendLine("	  AND FRACKARTON > 1 ")

        ExecQRY(sb.ToString, "SET QTYK ITEM BULKY = 0 DI TEMP_CETAKPB_TOLAKAN_IDM")

        '-----------------------------'
        '+ SIAPKAN DATA JALUR KERTAS +'
        '-----------------------------'
        Application.DoEvents()
        progress.Value = 50
        sb = New StringBuilder
        sb.AppendLine("Select coalesce(COUNT(1),0)  ")
        sb.AppendLine("  From information_schema.columns ")
        sb.AppendLine(" Where UPPER(table_name) = 'TEMP_JALURKERTAS_IDM' ")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        jum = cmd.ExecuteScalar.ToString

        If jum = 0 Then
            sb = New StringBuilder
            sb.AppendLine("Create Table TEMP_JALURKERTAS_IDM ")
            sb.AppendLine("AS ")
            sb.AppendLine("Select pbi.*, ")
            sb.AppendLine("     lks_KodeRak,lks_KodeSubrak,lks_TipeRak,lks_ShelvingRak,lks_NoUrut, ")
            sb.AppendLine("     GRR_GroupRak,coalesce(ST_SaldoAkhir,0) as STOK ")
            'sb.AppendLine("   From temp_pbidm_ready pbi, tbMaster_Lokasi, tbMaster_GroupRak, tbMaster_Stock ")
            sb.AppendLine("    From temp_pbidm_ready pbi ")
            sb.AppendLine("    join tbMaster_Stock on plukarton = ST_PRDCD ")
            sb.AppendLine("    join tbMaster_Lokasi on ST_PRDCD = PLUKARTON ")
            sb.AppendLine("    join tbMaster_GroupRak on LKS_KodeRak = GRR_KodeRAK And LKS_KodeSubrak = GRR_SubRak ")
            sb.AppendLine("    Where REQ_ID = '" & IP & "' ")
            sb.AppendLine("      And FDNOUO = '" & noPB & "' ")
            sb.AppendLine("      And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("      And LKS_PRDCD Like SUBSTR(PLUKarton,1,6)||'%' ")
            'sb.AppendLine("      And LKS_KodeRak = GRR_KodeRAK ")
            'sb.AppendLine("      And LKS_KodeSubrak = GRR_SubRak    ")
            sb.AppendLine("      And FracKarton = 1   ")
            sb.AppendLine("      And coalesce(TolakMinJ,'X') <> 'T' ")
            'sb.AppendLine("      And ST_PRDCD(+) = PLUKARTON ")
            sb.AppendLine("      And ST_Lokasi = '01' ")
            sb.AppendLine("      And GRR_GROUPRAK NOT LIKE 'H%' ")
            sb.AppendLine("      And LKS_TIPERAK NOT LIKE  'S%' ")

            ExecQRY(sb.ToString, "Create Table TEMP_JALURKERTAS_IDM")
        Else
            sb = New StringBuilder
            sb.AppendLine("Delete From TEMP_JALURKERTAS_IDM ")
            sb.AppendLine(" Where REQ_ID = '" & IP & "' ")
            sb.AppendLine("   And FDNOUO = '" & noPB & "' ")
            sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")

            ExecQRY(sb.ToString, "Delete From TEMP_JALURKERTAS_IDM")

            sb = New StringBuilder
            sb.AppendLine("INSERT INTO TEMP_JALURKERTAS_IDM ")
            sb.AppendLine("Select pbi.*, ")
            sb.AppendLine(" lks_KodeRak,lks_KodeSubrak,lks_TipeRak,lks_ShelvingRak,lks_NoUrut,GRR_GroupRak, ")
            sb.AppendLine("  coalesce(ST_SaldoAkhir,0) as STOK ")
            'sb.AppendLine("  From temp_pbidm_ready pbi, tbMaster_Lokasi, tbMaster_GroupRak, tbMaster_Stock ")
            sb.AppendLine("    From temp_pbidm_ready pbi ")
            sb.AppendLine("    join tbMaster_Stock on plukarton = ST_PRDCD ")
            sb.AppendLine("    join tbMaster_Lokasi on ST_PRDCD = PLUKARTON ")
            sb.AppendLine("    join tbMaster_GroupRak on LKS_KodeRak = GRR_KodeRAK And LKS_KodeSubrak = GRR_SubRak ")
            sb.AppendLine("     Where REQ_ID = '" & IP & "' ")
            sb.AppendLine("     And FDNOUO = '" & noPB & "' ")
            sb.AppendLine("     And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("     And LKS_PRDCD Like SUBSTR(PLUKarton,1,6)||'%' ")
            'sb.AppendLine("     And LKS_KodeRak = GRR_KodeRAK ")
            'sb.AppendLine("     And LKS_KodeSubrak = GRR_SubRak    ")
            sb.AppendLine("     And FracKarton = 1   ")
            sb.AppendLine("     And coalesce(TolakMinJ,'X') <> 'T' ")
            'sb.AppendLine("     And ST_PRDCD(+) = PLUKARTON ")
            sb.AppendLine("     And ST_Lokasi = '01' ")
            sb.AppendLine("     And GRR_GROUPRAK NOT LIKE 'H%' ")
            sb.AppendLine("     And LKS_TIPERAK NOT LIKE  'S%' ")

            ExecQRY(sb.ToString, "INSERT INTO TEMP_JALURKERTAS_IDM 1")
        End If

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TEMP_JALURKERTAS_IDM ")
        sb.AppendLine("Select pbi.*,lks_KodeRak,lks_KodeSubrak,lks_TipeRak,lks_ShelvingRak,lks_NoUrut,GRR_GroupRak,coalesce(ST_SaldoAkhir,0) as STOK ")
        'sb.AppendLine("  From temp_pbidm_ready pbi, tbMaster_Lokasi, tbMaster_GroupRak, tbMaster_Stock ")
        sb.AppendLine("    From temp_pbidm_ready pbi ")
        sb.AppendLine("    join tbMaster_Stock on plukarton = ST_PRDCD ")
        sb.AppendLine("    join tbMaster_Lokasi on ST_PRDCD = PLUKARTON ")
        sb.AppendLine("    join tbMaster_GroupRak on LKS_KodeRak = GRR_KodeRAK And LKS_KodeSubrak = GRR_SubRak ")
        sb.AppendLine(" Where REQ_ID = '" & IP & "' ")
        sb.AppendLine("   And FDNOUO = '" & noPB & "' ")
        sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   And LKS_PRDCD Like SUBSTR(PLUKarton,1,6)||'%' ")
        'sb.AppendLine("   And LKS_KodeRak = GRR_KodeRAK ")
        'sb.AppendLine("   And LKS_KodeSubrak = GRR_SubRak    ")
        sb.AppendLine("   And coalesce(GRR_FlagCetakan,'X') = 'Y' ")
        sb.AppendLine("   And coalesce(TolakMinJ,'X') <> 'T' ")
        sb.AppendLine("   And NOT EXISTS ")
        sb.AppendLine("   ( ")
        sb.AppendLine("   Select K.plukarton  ")
        sb.AppendLine("     From TEMP_JALURKERTAS_IDM K ")
        sb.AppendLine("    Where K.REQ_ID = '" & IP & "' ")
        sb.AppendLine("      And K.FDNOUO = '" & noPB & "'  ")
        sb.AppendLine("      And K.FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')  ")
        sb.AppendLine("      And K.PLUKARTON = PBI.PLUKARTON   ")
        sb.AppendLine("   ) ")
        sb.AppendLine("   And QTYK > 0 ")
        sb.AppendLine("   And NOT EXISTS ")
        sb.AppendLine("   ( ")
        sb.AppendLine("    Select LKS_KodeRak ")
        sb.AppendLine("      From tbMaster_Lokasi ")
        sb.AppendLine("     Where LKS_PRDCD = PLUKARTON ")
        sb.AppendLine("       And LKS_Noid Like '%P'        ")
        sb.AppendLine("       And LKS_TIPERAK NOT LIKE  'S%' ")
        sb.AppendLine("   ) ")
        'sb.AppendLine("   And ST_PRDCD(+) = PLUKARTON ")
        sb.AppendLine("   And ST_Lokasi = '01' ")
        sb.AppendLine("   And LKS_TIPERAK NOT LIKE  'S%' ")

        ExecQRY(sb.ToString, "INSERT INTO TEMP_JALURKERTAS_IDM 2")

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TEMP_JALURKERTAS_IDM ")
        sb.AppendLine("Select pbi.*,'' as lks_KodeRak,'' as lks_KodeSubrak,'' as lks_TipeRak,'' as lks_ShelvingRak,'' as lks_NoUrut,'' as GRR_GroupRak, coalesce(ST_SaldoAkhir,0) as Stok")
        sb.AppendLine("  From temp_pbidm_ready pbi ")
        sb.AppendLine(" JOIN tbMaster_StocK ON ST_PRDCD = PLUKARTON AND ST_Lokasi = '01' ")
        sb.AppendLine(" Where REQ_ID = '" & IP & "' ")
        sb.AppendLine("   And FDNOUO = '" & noPB & "' ")
        sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   And NOT EXISTS ")
        sb.AppendLine("   ( ")
        sb.AppendLine("      Select LKS_KodeRak ")
        sb.AppendLine("	       From tbMaster_Lokasi ")
        sb.AppendLine("	      Where LKS_PRDCD = PLUKARTON ")
        sb.AppendLine("         And LKS_TIPERAK NOT LIKE  'S%' ")
        sb.AppendLine("   ) ")
        sb.AppendLine("   And FracKarton = 1   ")
        sb.AppendLine("   And coalesce(TolakMinJ,'X') <> 'T' ")
        'sb.AppendLine("   And ST_PRDCD(+) = PLUKARTON ")
        'sb.AppendLine("   And ST_Lokasi(+) = '01' ")

        ExecQRY(sb.ToString, "INSERT INTO TEMP_JALURKERTAS_IDM 3")

        '-------------------------------'
        '+ SIAPKAN DATA KARTON NON DPD +'
        '-------------------------------'
        Application.DoEvents()
        progress.Value = 70
        sb = New StringBuilder
        sb.AppendLine("Select coalesce(COUNT(1),0)  ")
        sb.AppendLine("  From information_schema.columns ")
        sb.AppendLine(" Where UPPER(table_name) = 'TEMP_KARTON_NONDPD_IDM' ")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        jum = cmd.ExecuteScalar.ToString

        If jum = 0 Then
            sb = New StringBuilder
            sb.AppendLine("Create Table TEMP_KARTON_NONDPD_IDM ")
            sb.AppendLine("AS ")
            sb.AppendLine("Select pbi.*, ")
            sb.AppendLine("       lks_koderak, ")
            sb.AppendLine("	      lks_kodesubrak, ")
            sb.AppendLine("	      lks_tiperak, ")
            sb.AppendLine("	      lks_nourut, ")
            sb.AppendLine("	      grr_grouprak, ")
            sb.AppendLine("	      coalesce(ST_SaldoAkhir,0) as Stok ")
            sb.AppendLine("  From temp_pbidm_ready pbi, tbMaster_lokasi, tbMaster_groupRak, tbMaster_Stock   ")
            sb.AppendLine(" Where REQ_ID = '" & IP & "'   ")
            sb.AppendLine("   And FDNOUO = '" & noPB & "'   ")
            sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("   And EXISTS   ")
            sb.AppendLine("   (   ")
            sb.AppendLine("     Select grr_koderak   ")
            sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak   ")
            sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'   ")
            sb.AppendLine("        And LKS_PRDCD = PLUKarton   ")
            sb.AppendLine("        And GRR_Koderak = LKS_KodeRak   ")
            sb.AppendLine("        And GRR_Subrak  = LKS_KodeSubrak  ")
            sb.AppendLine("        And coalesce(LKS_Noid,'X') Like '%P'    ")
            sb.AppendLine("        And coalesce(GRR_FlagCetakan,'X') <> 'Y'  ")
            sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
            sb.AppendLine("   )   ")
            sb.AppendLine("   And NOT EXISTS  ")
            sb.AppendLine("   (  ")
            sb.AppendLine("     Select grr_koderak   ")
            sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak   ")
            sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'   ")
            sb.AppendLine("        And LKS_PRDCD = PLUKarton   ")
            sb.AppendLine("        And GRR_Koderak = LKS_KodeRak   ")
            sb.AppendLine("        And GRR_Subrak  = LKS_KodeSubrak  ")
            sb.AppendLine("        And coalesce(LKS_Noid,'X') Like '%B'   ")
            sb.AppendLine("        And coalesce(GRR_FlagCetakan,'X') <> 'Y'  ")
            sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
            sb.AppendLine("   )  ")
            sb.AppendLine("   And coalesce(TolakMinJ,'X') <> 'T'  ")
            sb.AppendLine("   And QTYB > 0   ")
            sb.AppendLine("   And LKS_KodeIGR = '" & KDIGR & "'   ")
            sb.AppendLine("   And LKS_PRDCD = PLUKarton   ")
            sb.AppendLine("   And LKS_NOID IS NOT NULL ")
            sb.AppendLine("   And LKS_KodeRak Like 'D%' ")
            sb.AppendLine("   And GRR_Koderak = LKS_KodeRak   ")
            sb.AppendLine("   And GRR_Subrak  = LKS_KodeSubrak ")
            'sb.AppendLine("   And ST_PRDCD(+) = PLUKARTON ")
            'sb.AppendLine("   And ST_Lokasi(+) = '01' ")
            sb.AppendLine("   And ST_PRDCD = PLUKARTON ")
            sb.AppendLine("   And ST_Lokasi = '01' ")
            sb.AppendLine("   And LKS_TIPERAK NOT LIKE  'S%' ")

            ExecQRY(sb.ToString, "CREATE TABLE TEMP_KARTON_NONDPD_IDM")
        Else
            sb = New StringBuilder
            sb.AppendLine("Delete From TEMP_KARTON_NONDPD_IDM ")
            sb.AppendLine(" Where REQ_ID = '" & IP & "' ")
            sb.AppendLine("   And FDNOUO = '" & noPB & "' ")
            sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")

            ExecQRY(sb.ToString, "Delete From TEMP_KARTON_NONDPD_IDM ")

            sb = New StringBuilder
            sb.AppendLine("Select pbi.*, ")
            sb.AppendLine("       lks_koderak, ")
            sb.AppendLine("	      lks_kodesubrak, ")
            sb.AppendLine("	      lks_tiperak, ")
            sb.AppendLine("	      lks_nourut, ")
            sb.AppendLine("	      grr_grouprak, ")
            sb.AppendLine("	      coalesce(ST_SaldoAkhir,0) as Stok ")
            sb.AppendLine("  From temp_pbidm_ready pbi, tbMaster_lokasi, tbMaster_groupRak, tbMaster_Stock   ")
            sb.AppendLine(" Where REQ_ID = '" & IP & "'   ")
            sb.AppendLine("   And FDNOUO = '" & noPB & "'   ")
            sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("   And EXISTS   ")
            sb.AppendLine("   (   ")
            sb.AppendLine("     Select grr_koderak   ")
            sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak   ")
            sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'   ")
            sb.AppendLine("        And LKS_PRDCD = PLUKarton   ")
            sb.AppendLine("        And GRR_Koderak = LKS_KodeRak   ")
            sb.AppendLine("        And GRR_Subrak  = LKS_KodeSubrak  ")
            sb.AppendLine("        And coalesce(LKS_Noid,'X') Like '%P'    ")
            sb.AppendLine("        And coalesce(GRR_FlagCetakan,'X') <> 'Y'  ")
            sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
            sb.AppendLine("   )   ")
            sb.AppendLine("   And NOT EXISTS  ")
            sb.AppendLine("   (  ")
            sb.AppendLine("     Select grr_koderak   ")
            sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak   ")
            sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'   ")
            sb.AppendLine("        And LKS_PRDCD = PLUKarton   ")
            sb.AppendLine("        And GRR_Koderak = LKS_KodeRak   ")
            sb.AppendLine("        And GRR_Subrak  = LKS_KodeSubrak  ")
            sb.AppendLine("        And coalesce(LKS_Noid,'X') Like '%B'   ")
            sb.AppendLine("        And coalesce(GRR_FlagCetakan,'X') <> 'Y'  ")
            sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
            sb.AppendLine("   )  ")
            sb.AppendLine("   And coalesce(TolakMinJ,'X') <> 'T'  ")
            sb.AppendLine("   And QTYB > 0   ")
            sb.AppendLine("   And LKS_KodeIGR = '" & KDIGR & "'   ")
            sb.AppendLine("   And LKS_PRDCD = PLUKarton   ")
            sb.AppendLine("   And LKS_NOID IS NOT NULL ")
            sb.AppendLine("   And LKS_KodeRak Like 'D%' ")
            sb.AppendLine("   And GRR_Koderak = LKS_KodeRak   ")
            sb.AppendLine("   And GRR_Subrak  = LKS_KodeSubrak ")
            sb.AppendLine("   And ST_PRDCD(+) = PLUKARTON ")
            sb.AppendLine("   And ST_Lokasi(+) = '01' ")
            sb.AppendLine("   And LKS_TIPERAK NOT LIKE  'S%' ")

            ExecQRY(sb.ToString, "INSERT INTO TEMP_KARTON_NONDPD_IDM 1")
        End If

        sb = New StringBuilder
        sb.AppendLine("Select coalesce(COUNT(1),0)  ")
        sb.AppendLine("  From information_schema.columns ")
        sb.AppendLine(" Where UPPER(table_name) = 'TEMP_KARTON_NONDPD_IDM2' ")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        jum = cmd.ExecuteScalar.ToString

        If jum = 0 Then
            sb = New StringBuilder
            sb.AppendLine("CREATE TABLE TEMP_KARTON_NONDPD_IDM2 ")
            sb.AppendLine("AS    ")
            sb.AppendLine("Select *    ")
            sb.AppendLine("  From temp_pbidm_ready pbi  ")
            sb.AppendLine(" Where REQ_ID = '" & IP & "'   ")
            sb.AppendLine("   And FDNOUO = '" & noPB & "'   ")
            sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("   And EXISTS   ")
            sb.AppendLine("   (   ")
            sb.AppendLine("     Select grr_koderak   ")
            sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak   ")
            sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'   ")
            sb.AppendLine("        And LKS_PRDCD = PLUKarton   ")
            sb.AppendLine("        And GRR_Koderak(+) = LKS_KodeRak   ")
            sb.AppendLine("        And GRR_Subrak(+)  = LKS_KodeSubrak  ")
            sb.AppendLine("        And LKS_NOID IS NULL ")
            sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
            sb.AppendLine("   )  ")
            sb.AppendLine("   AND coalesce(TolakMinJ,'X') <> 'T'  ")
            sb.AppendLine("   And QTYB > 0   ")
            sb.AppendLine("   And NOT EXISTS  ")
            sb.AppendLine("   (  ")
            sb.AppendLine("        Select ND.PLUKARTON  ")
            sb.AppendLine("          From TEMP_KARTON_NONDPD_IDM ND  ")
            sb.AppendLine("         Where ND.REQ_ID = '" & IP & "'   ")
            sb.AppendLine("           And ND.FDNOUO = '" & noPB & "'   ")
            sb.AppendLine("           And ND.FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("           And ND.PLUKARTON = pbi.PLUKARTON  ")
            sb.AppendLine("   )     ")
            sb.AppendLine("   And NOT EXISTS  ")
            sb.AppendLine("   (  ")
            sb.AppendLine("     Select grr_koderak   ")
            sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak   ")
            sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'  ")
            sb.AppendLine("        And LKS_PRDCD = PLUKarton   ")
            sb.AppendLine("        And GRR_Koderak(+) = LKS_KodeRak   ")
            sb.AppendLine("        And GRR_Subrak(+)  = LKS_KodeSubrak  ")
            sb.AppendLine("        And LKS_NOID Like '%B'  ")
            sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
            sb.AppendLine("   )   ")

            ExecQRY(sb.ToString, "INSERT INTO TEMP_KARTON_NONDPD_IDM 1")
        Else
            sb = New StringBuilder
            sb.AppendLine("INSERT INTO TEMP_KARTON_NONDPD_IDM2 ")
            sb.AppendLine("Select *    ")
            sb.AppendLine("  From temp_pbidm_ready pbi  ")
            sb.AppendLine(" Where REQ_ID = '" & IP & "'   ")
            sb.AppendLine("   And FDNOUO = '" & noPB & "'   ")
            sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("   And EXISTS   ")
            sb.AppendLine("   (   ")
            sb.AppendLine("     Select grr_koderak   ")
            sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak   ")
            sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'   ")
            sb.AppendLine("        And LKS_PRDCD = PLUKarton   ")
            sb.AppendLine("        And GRR_Koderak(+) = LKS_KodeRak   ")
            sb.AppendLine("        And GRR_Subrak(+)  = LKS_KodeSubrak  ")
            sb.AppendLine("        And LKS_NOID IS NULL ")
            sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
            sb.AppendLine("   )  ")
            sb.AppendLine("   AND coalesce(TolakMinJ,'X') <> 'T'  ")
            sb.AppendLine("   And QTYB > 0   ")
            sb.AppendLine("   And NOT EXISTS  ")
            sb.AppendLine("   (  ")
            sb.AppendLine("        Select ND.PLUKARTON  ")
            sb.AppendLine("          From TEMP_KARTON_NONDPD_IDM ND  ")
            sb.AppendLine("         Where ND.REQ_ID = '" & IP & "'   ")
            sb.AppendLine("           And ND.FDNOUO = '" & noPB & "'   ")
            sb.AppendLine("           And ND.FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("           And ND.PLUKARTON = pbi.PLUKARTON  ")
            sb.AppendLine("   )     ")
            sb.AppendLine("   And NOT EXISTS  ")
            sb.AppendLine("   (  ")
            sb.AppendLine("     Select grr_koderak   ")
            sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak   ")
            sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'  ")
            sb.AppendLine("        And LKS_PRDCD = PLUKarton   ")
            sb.AppendLine("        And GRR_Koderak(+) = LKS_KodeRak   ")
            sb.AppendLine("        And GRR_Subrak(+)  = LKS_KodeSubrak  ")
            sb.AppendLine("        And LKS_NOID Like '%B'  ")
            sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
            sb.AppendLine("   )   ")

            ExecQRY(sb.ToString, "INSERT INTO TEMP_KARTON_NONDPD_IDM2 1")
        End If

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TEMP_KARTON_NONDPD_IDM ")
        sb.AppendLine("Select dpd2.*, ")
        sb.AppendLine("       lks_koderak, ")
        sb.AppendLine("	      lks_kodesubrak, ")
        sb.AppendLine("	      lks_tiperak, ")
        sb.AppendLine("	      lks_nourut, ")
        sb.AppendLine("	      grr_grouprak, ")
        sb.AppendLine("	      coalesce(ST_SaldoAkhir,0) as Stok ")
        sb.AppendLine("  From TEMP_KARTON_NONDPD_IDM2 dpd2, tbmaster_lokasi,tbmaster_grouprak, tbMaster_stock")
        sb.AppendLine(" Where LKS_KodeIGR = '" & KDIGR & "'   ")
        sb.AppendLine("   And LKS_PRDCD = PLUKarton   ")
        sb.AppendLine("   And GRR_Koderak = LKS_KodeRak   ")
        sb.AppendLine("   And GRR_Subrak  = LKS_KodeSubrak ")
        sb.AppendLine("   And REQ_ID = '" & IP & "'   ")
        sb.AppendLine("   And FDKCAB = '" & KodeToko & "'    ")
        sb.AppendLine("   And FDNOUO = '" & noPB & "'   ")
        sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   And ST_PRDCD(+) = PLUKARTON ")
        sb.AppendLine("   And ST_Lokasi(+) = '01' ")
        sb.AppendLine("   And LKS_TIPERAK NOT LIKE  'S%' ")

        ExecQRY(sb.ToString, "INSERT INTO TEMP_KARTON_NONDPD_IDM 2")

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TEMP_KARTON_NONDPD_IDM ")
        sb.AppendLine("Select dpd2.*, ")
        sb.AppendLine("       lks_koderak, ")
        sb.AppendLine("	      lks_kodesubrak, ")
        sb.AppendLine("	      lks_tiperak, ")
        sb.AppendLine("	      lks_nourut, ")
        sb.AppendLine("	      '' as GRR_GROUPRAK, ")
        sb.AppendLine("	      coalesce(ST_SaldoAkhir,0) as Stok ")
        sb.AppendLine("  From TEMP_KARTON_NONDPD_IDM2 dpd2, tbmaster_lokasi, tbMaster_Stock ")
        sb.AppendLine(" Where LKS_KodeIGR = '" & KDIGR & "'   ")
        sb.AppendLine("       And LKS_PRDCD = PLUKarton   ")
        sb.AppendLine("       And EXISTS ")
        sb.AppendLine("       ( ")
        sb.AppendLine("          Select lks_koderak ")
        sb.AppendLine("            From tbMaster_Lokasi lks2 ")
        sb.AppendLine("           Where lks2.LKS_PRDCD = PLUKARTON ")
        sb.AppendLine("             And lks2.LKS_TIPERAK NOT LIKE  'S%' ")
        sb.AppendLine("       )                 ")
        sb.AppendLine("       And NOT EXISTS         ")
        sb.AppendLine("       ( ")
        sb.AppendLine("          Select grr_koderak   ")
        sb.AppendLine("            From tbMaster_Lokasi lks3,tbMaster_GroupRak   ")
        sb.AppendLine("           Where lks3.LKS_KodeIGR = '" & KDIGR & "'   ")
        sb.AppendLine("             And lks3.LKS_PRDCD = PLUKarton   ")
        sb.AppendLine("             And GRR_Koderak = lks3.LKS_KodeRak   ")
        sb.AppendLine("             And GRR_Subrak  = lks3.LKS_KodeSubrak  ")
        sb.AppendLine("             And lks3.LKS_TIPERAK NOT LIKE  'S%' ")
        sb.AppendLine("       ) ")
        sb.AppendLine("        And REQ_ID = '" & IP & "'   ")
        sb.AppendLine("        And FDKCAB = '" & KodeToko & "'    ")
        sb.AppendLine("        And FDNOUO = '" & noPB & "'   ")
        sb.AppendLine("        And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("        And ST_PRDCD(+) = PLUKARTON ")
        sb.AppendLine("        And ST_Lokasi(+) = '01' ")
        sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")

        ExecQRY(sb.ToString, "INSERT INTO TEMP_KARTON_NONDPD_IDM 3")

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TBTR_TolakanPBOMI ")
        sb.AppendLine("( ")
        sb.AppendLine(" TLKO_KodeIGR, ")
        sb.AppendLine(" TLKO_KodeOMI, ")
        sb.AppendLine(" TLKO_TglPB, ")
        sb.AppendLine(" TLKO_NoPB, ")
        sb.AppendLine(" TLKO_PluIGR, ")
        sb.AppendLine(" TLKO_PluOMI, ")
        sb.AppendLine(" TLKO_PTAG, ")
        sb.AppendLine(" TLKO_DESC, ")
        sb.AppendLine(" TLKO_KetTolakan, ")
        sb.AppendLine(" TLKO_QtyOrder, ")
        sb.AppendLine(" TLKO_LastCost, ")
        sb.AppendLine(" TLKO_Nilai, ")
        sb.AppendLine(" TLKO_Create_By, ")
        sb.AppendLine(" TLKO_Create_Dt ")
        sb.AppendLine(") ")
        sb.AppendLine("Select KODEIGR, ")
        sb.AppendLine("       KCAB, ")
        sb.AppendLine("       TGLDOK, ")
        sb.AppendLine("       NODOK, ")
        sb.AppendLine("       PLUIGR, ")
        sb.AppendLine("       PLU, ")
        sb.AppendLine("       TAG, ")
        sb.AppendLine("       DESCR, ")
        sb.AppendLine("       KETA, ")
        sb.AppendLine("       QTYO, ")
        sb.AppendLine("       ST_AVGCOST, ")
        sb.AppendLine("       GROSS, ")
        sb.AppendLine("       '" & UserID & "', ")
        sb.AppendLine("       CURRENT_DATE ")
        sb.AppendLine("  From TEMP_CETAKPB_TOLAKAN_IDM, tbMaster_Stock ")
        sb.AppendLine(" Where REQ_ID = '" & IP & "' ")
        sb.AppendLine("   And ST_PRDCD(+) = SUBSTR(PLUIGR,1,6)||'0' ")
        sb.AppendLine("   And ST_Lokasi(+) = '01' ")
        sb.AppendLine(" ")

        ExecQRY(sb.ToString, "INSERT INTO TBTR_TOLAKANPBOMI")

        sb = New StringBuilder
        sb.AppendLine("MERGE INTO ")
        sb.AppendLine("( ")
        sb.AppendLine("  Select * ")
        sb.AppendLine("    FROM TBTR_TOLAKANPBOMI ")
        sb.AppendLine("	  Where tlko_NoPB = '" & noPB & "' ")
        sb.AppendLine("		 And tlko_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine(") a ")
        sb.AppendLine("USING ")
        sb.AppendLine("( ")
        If kodeDCIDM <> "" Then
            sb.AppendLine("  SELECT IDM_PLUIDM, ")
            sb.AppendLine("         IDM_KodeTag ")
            sb.AppendLine("    FROM tbMaster_Pluidm ")
            sb.AppendLine("   Where IDM_KodeIDM = '" & kodeDCIDM & "' ")
            sb.AppendLine("     And Exists( ")
            sb.AppendLine("      Select tlko_pluomi ")
            sb.AppendLine("	       From tbtr_TolakanPbOMI ")
            sb.AppendLine("	      Where tlko_PluOMI = IDM_PLUIDM ")
            sb.AppendLine("		    And tlko_NoPB = '" & noPB & "' ")
            sb.AppendLine("		    And tlko_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("   ) ")
            sb.AppendLine(") b ")
            sb.AppendLine("ON(a.TLKO_PLUOMI = b.IDM_PLUIDM) ")
            sb.AppendLine("WHEN MATCHED THEN ")
            sb.AppendLine("UPDATE SET a.TLKO_TAG_MD = b.IDM_KodeTag ")
        Else
            sb.AppendLine("  SELECT PRC_PLUIDM, ")
            sb.AppendLine("         PRC_KodeTag ")
            sb.AppendLine("    FROM tbMaster_Prodcrm ")
            sb.AppendLine("   Where Exists ")
            sb.AppendLine("   ( ")
            sb.AppendLine("      Select tlko_pluomi ")
            sb.AppendLine("	       From tbtr_TolakanPbOMI ")
            sb.AppendLine("	      Where tlko_PluOMI = PRC_PLUIDM ")
            sb.AppendLine("		    And tlko_NoPB = '" & noPB & "' ")
            sb.AppendLine("		    And tlko_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("   ) ")
            sb.AppendLine(") b ")
            sb.AppendLine("ON(a.TLKO_PLUOMI = b.PRC_PLUIDM) ")
            sb.AppendLine("WHEN MATCHED THEN ")
            sb.AppendLine("UPDATE SET a.TLKO_TAG_MD = b.PRC_KodeTag ")
        End If

        ExecQRY(sb.ToString, "MERGE INTO TBTR_TOLAKANPBOMI-IDM_Tag")

        sb = New StringBuilder
        sb.AppendLine("MERGE INTO ")
        sb.AppendLine("( ")
        sb.AppendLine("  Select * ")
        sb.AppendLine("    FROM TBTR_TOLAKANPBOMI ")
        sb.AppendLine("	   Where tlko_NoPB = '" & noPB & "' ")
        sb.AppendLine("		 And tlko_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine(") a ")
        sb.AppendLine("USING ")
        sb.AppendLine("( ")
        sb.AppendLine("   SELECT PRD_PRDCD, ")
        sb.AppendLine("          PRD_KodeTAG ")
        sb.AppendLine("	    FROM TbMaster_Prodmast ")
        sb.AppendLine("	   Where Exists ")
        sb.AppendLine("   ( ")
        sb.AppendLine("      Select tlko_pluomi ")
        sb.AppendLine("	    From tbtr_TolakanPbOMI ")
        sb.AppendLine("	   Where tlko_PluIGR = PRD_PRDCD ")
        sb.AppendLine("		 And tlko_NoPB = '" & noPB & "' ")
        sb.AppendLine("		 And tlko_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   ) ")
        sb.AppendLine(") b ")
        sb.AppendLine("ON(a.TLKO_PLUOMI = b.PRD_PRDCD) ")
        sb.AppendLine("WHEN MATCHED THEN ")
        sb.AppendLine("UPDATE SET a.TLKO_TAG_IGR = b.PRD_KodeTag ")

        ExecQRY(sb.ToString, "MERGE INTO TBTR_TOLAKANPBOMI-PRD_KodeTag")

        sb = New StringBuilder
        sb.AppendLine("MERGE INTO ")
        sb.AppendLine(" ( ")
        sb.AppendLine(" Select * ")
        sb.AppendLine("   FROM TBTR_TOLAKANPBOMI ")
        sb.AppendLine("	 Where tlko_NoPB = '" & noPB & "' ")
        sb.AppendLine("	   And tlko_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine(" ) a ")
        sb.AppendLine("USING ")
        sb.AppendLine("( ")
        sb.AppendLine("SELECT ST_PRDCD, ")
        sb.AppendLine("       round(st_avgcost * (1 + coalesce(MPI_MARGIN,3)/100)) as RUPIAH, ")
        sb.AppendLine("       round(st_avgcost * (coalesce(MPI_MARGIN,3)/100)) as MARGIN, ")
        sb.AppendLine("       coalesce(ST_SALDOAKHIR,0) as LPP ")
        sb.AppendLine("	 FROM TbMaster_Stock, ")
        sb.AppendLine("       TbMaster_MarginPluIDM ")
        sb.AppendLine("	Where Exists ")
        sb.AppendLine("   ( ")
        sb.AppendLine("   Select tlko_pluomi ")
        sb.AppendLine("	    From tbtr_TolakanPbOMI ")
        sb.AppendLine("	   Where tlko_PluIGR = ST_PRDCD ")
        sb.AppendLine("		 And tlko_NoPB = '" & noPB & "' ")
        sb.AppendLine("		 And tlko_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   ) ")
        sb.AppendLine("   And ST_Lokasi = '01' ")
        sb.AppendLine("   And ST_PRDCD = MPI_PluIGR(+) ")
        sb.AppendLine(") b ")
        sb.AppendLine("ON(a.TLKO_PLUIGR = b.ST_PRDCD) ")
        sb.AppendLine("WHEN MATCHED THEN ")
        sb.AppendLine("UPDATE SET a.TLKO_NILAI = b.RUPIAH, ")
        sb.AppendLine("           a.TLKO_MARGIN = b.MARGIN, ")
        sb.AppendLine("           a.TLKO_LPP = b.LPP ")

        ExecQRY(sb.ToString, "MERGE INTO TBTR_TOLAKANPBOMI-ST_AvgCost")

        '-----------------------------------'
        '+ SIAPKAN DATA JALUR TIDAK KETEMU +'
        '-----------------------------------'
        Application.DoEvents()
        progress.Value = 75
        sb = New StringBuilder
        sb.AppendLine("Select coalesce(COUNT(1),0)  ")
        sb.AppendLine("  From information_schema.columns ")
        sb.AppendLine(" Where UPPER(table_name) = 'TEMP_NOJALUR_IDM' ")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        jum = cmd.ExecuteScalar.ToString

        If jum = 0 Then
            sb = New StringBuilder
            sb.AppendLine("CREATE TABLE TEMP_NOJALUR_IDM ")
            sb.AppendLine("AS ")
            sb.AppendLine("Select *  ")
            sb.AppendLine("  From temp_pbidm_ready pbi ")
            sb.AppendLine(" Where pbi.REQ_ID = '" & IP & "' ")
            sb.AppendLine("   And pbi.FDNOUO = '" & noPB & "' ")
            sb.AppendLine("   And pbi.FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("   And Not EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("    Select lks_koderak ")
            sb.AppendLine("      From tbMaster_Lokasi ")
            sb.AppendLine("     Where LKS_KodeIGR = '" & KDIGR & "' ")
            sb.AppendLine("       And LKS_PRDCD = pbi.PLUKarton ")
            sb.AppendLine("       And LKS_TIPERAK NOT LIKE  'S%' ")
            sb.AppendLine("   ) ")
            sb.AppendLine("   And coalesce(pbi.TolakMinJ,'X') <> 'T' ")
            sb.AppendLine("   And Not EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("    Select K.PLUKARTON ")
            sb.AppendLine("      From TEMP_JALURKERTAS_IDM K ")
            sb.AppendLine("     Where K.REQ_ID = '" & IP & "' ")
            sb.AppendLine("       And K.FDNOUO = '" & noPB & "' ")
            sb.AppendLine("       And K.FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("       And K.PLUKARTON = pbi.PLUKARTON ")
            sb.AppendLine("   ) ")

            ExecQRY(sb.ToString, "Create Table TEMP_NOJALUR_IDM 1")
        Else
            sb = New StringBuilder
            sb.AppendLine("Delete From TEMP_NOJALUR_IDM ")
            sb.AppendLine(" Where REQ_ID = '" & IP & "' ")
            sb.AppendLine("   And FDNOUO = '" & noPB & "' ")
            sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")

            ExecQRY(sb.ToString, "Delete From TEMP_NOJALUR_IDM ")

            sb = New StringBuilder
            sb.AppendLine("INSERT INTO TEMP_NOJALUR_IDM ")
            sb.AppendLine("Select *  ")
            sb.AppendLine("  From temp_pbidm_ready pbi ")
            sb.AppendLine(" Where pbi.REQ_ID = '" & IP & "' ")
            sb.AppendLine("   And pbi.FDNOUO = '" & noPB & "' ")
            sb.AppendLine("   And pbi.FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("   And Not EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("    Select lks_koderak ")
            sb.AppendLine("      From tbMaster_Lokasi ")
            sb.AppendLine("     Where LKS_KodeIGR = '" & KDIGR & "' ")
            sb.AppendLine("       And LKS_PRDCD = pbi.PLUKarton ")
            sb.AppendLine("       And LKS_TIPERAK NOT LIKE  'S%' ")
            sb.AppendLine("   ) ")
            sb.AppendLine("   And coalesce(pbi.TolakMinJ,'X') <> 'T' ")
            sb.AppendLine("   And Not EXISTS ")
            sb.AppendLine("   ( ")
            sb.AppendLine("    Select K.PLUKARTON ")
            sb.AppendLine("      From TEMP_JALURKERTAS_IDM K ")
            sb.AppendLine("     Where K.REQ_ID = '" & IP & "' ")
            sb.AppendLine("       And K.FDNOUO = '" & noPB & "' ")
            sb.AppendLine("       And K.FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
            sb.AppendLine("       And K.PLUKARTON = pbi.PLUKARTON ")
            sb.AppendLine("   ) ")

            ExecQRY(sb.ToString, "INSERT INTO TEMP_NOJALUR_IDM 1")
        End If

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TEMP_NOJALUR_IDM ")
        sb.AppendLine("Select *  ")
        sb.AppendLine("  From temp_pbidm_ready ")
        sb.AppendLine(" Where REQ_ID = '" & IP & "' ")
        sb.AppendLine("   And FDNOUO = '" & noPB & "' ")
        sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   And EXISTS ")
        sb.AppendLine("   ( ")
        sb.AppendLine("    Select lks_koderak ")
        sb.AppendLine("      From tbMaster_Lokasi ")
        sb.AppendLine("     Where LKS_KodeIGR = '" & KDIGR & "' ")
        sb.AppendLine("       And LKS_PRDCD = PLUKarton ")
        sb.AppendLine("       And LKS_TIPERAK NOT LIKE  'S%' ")
        sb.AppendLine("   ) ")
        sb.AppendLine("   And NOT EXISTS ")
        sb.AppendLine("   ( ")
        sb.AppendLine("     Select grr_koderak ")
        sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak ")
        sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "' ")
        sb.AppendLine("        And LKS_PRDCD = PLUKarton ")
        sb.AppendLine("        And GRR_Koderak = LKS_KodeRak ")
        sb.AppendLine("        And GRR_Subrak  = LKS_KodeSubrak ")
        sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
        sb.AppendLine("   ) ")
        sb.AppendLine("   And coalesce(TolakMinJ,'X') <> 'T' ")
        sb.AppendLine("   And QTYK > 0 ")

        ExecQRY(sb.ToString, "INSERT INTO TEMP_NOJALUR_IDM 2")

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TEMP_NOJALUR_IDM ")
        sb.AppendLine("Select *   ")
        sb.AppendLine("  From temp_pbidm_ready  ")
        sb.AppendLine(" Where REQ_ID = '" & IP & "'  ")
        sb.AppendLine("   And FDNOUO = '" & noPB & "'  ")
        sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')  ")
        sb.AppendLine("   And EXISTS  ")
        sb.AppendLine("   (  ")
        sb.AppendLine("     Select grr_koderak  ")
        sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak  ")
        sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'  ")
        sb.AppendLine("        And LKS_PRDCD = PLUKarton  ")
        sb.AppendLine("        And GRR_Koderak = LKS_KodeRak  ")
        sb.AppendLine("        And GRR_Subrak  = LKS_KodeSubrak ")
        sb.AppendLine("        And coalesce(LKS_Noid,'X') Like '%B'   ")
        sb.AppendLine("        And coalesce(GRR_FlagCetakan,'X') <> 'Y' ")
        sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
        sb.AppendLine("   )  ")
        sb.AppendLine("   And NOT EXISTS ")
        sb.AppendLine("   ( ")
        sb.AppendLine("     Select grr_koderak  ")
        sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak  ")
        sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'  ")
        sb.AppendLine("        And LKS_PRDCD = PLUKarton  ")
        sb.AppendLine("        And GRR_Koderak = LKS_KodeRak  ")
        sb.AppendLine("        And GRR_Subrak  = LKS_KodeSubrak ")
        sb.AppendLine("        And coalesce(LKS_Noid,'X') Like '%P'  ")
        sb.AppendLine("        And coalesce(GRR_FlagCetakan,'X') <> 'Y' ")
        sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
        sb.AppendLine("   ) ")
        sb.AppendLine("   And NOT EXISTS ")
        sb.AppendLine("   ( ")
        sb.AppendLine("     Select grr_koderak  ")
        sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak  ")
        sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'  ")
        sb.AppendLine("        And LKS_PRDCD = PLUKarton  ")
        sb.AppendLine("        And GRR_Koderak = LKS_KodeRak  ")
        sb.AppendLine("        And GRR_Subrak  = LKS_KodeSubrak         ")
        sb.AppendLine("        And coalesce(GRR_FlagCetakan,'X') = 'Y' ")
        sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
        sb.AppendLine("   ) ")
        sb.AppendLine("   And coalesce(TolakMinJ,'X') <> 'T' ")
        sb.AppendLine("   And QTYK > 0  ")

        ExecQRY(sb.ToString, "INSERT INTO TEMP_NOJALUR_IDM 3")

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TEMP_NOJALUR_IDM ")
        sb.AppendLine("Select *   ")
        sb.AppendLine("  From temp_pbidm_ready  ")
        sb.AppendLine(" Where REQ_ID = '" & IP & "'  ")
        sb.AppendLine("   And FDNOUO = '" & noPB & "'  ")
        sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')    ")
        sb.AppendLine("   And EXISTS  ")
        sb.AppendLine("   (  ")
        sb.AppendLine("     Select grr_koderak  ")
        sb.AppendLine("       From tbMaster_Lokasi,tbMaster_GroupRak  ")
        sb.AppendLine("      Where LKS_KodeIGR = '" & KDIGR & "'  ")
        sb.AppendLine("        And LKS_PRDCD = PLUKarton  ")
        sb.AppendLine("        And GRR_Koderak = LKS_KodeRak  ")
        sb.AppendLine("        And GRR_Subrak  = LKS_KodeSubrak ")
        sb.AppendLine("        And LKS_NOID IS NULL  ")
        sb.AppendLine("        And LKS_KodeRak Like 'D%' ")
        sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
        sb.AppendLine("   ) ")
        sb.AppendLine("   AND NOT EXISTS ")
        sb.AppendLine("   ( ")
        sb.AppendLine("     Select LKS_NOID ")
        sb.AppendLine("       From tbMaster_Lokasi ")
        sb.AppendLine("      Where LKS_PRDCD = PLUKarton ")
        sb.AppendLine("        And LKS_NOID Like '%P' ")
        sb.AppendLine("        And LKS_TIPERAK NOT LIKE  'S%' ")
        sb.AppendLine("   )  ")
        sb.AppendLine("   And coalesce(TolakMinJ,'X') <> 'T'     ")
        sb.AppendLine("   And QTYK > 0 ")

        ExecQRY(sb.ToString, "INSERT INTO TEMP_NOJALUR_IDM 4")

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TEMP_NOJALUR_IDM ")
        sb.AppendLine("Select 'B', ")
        sb.AppendLine("       FDNOUO, ")
        sb.AppendLine("       FDKODE, ")
        sb.AppendLine("       FDQTYB, ")
        sb.AppendLine("       FDKCAB, ")
        sb.AppendLine("       FDTGPB, ")
        sb.AppendLine("       FDKSUP, ")
        sb.AppendLine("       REQ_ID, ")
        sb.AppendLine("       NAMA_FILE, ")
        sb.AppendLine("       DESK, ")
        sb.AppendLine("       BKP, ")
        sb.AppendLine("       PLUKARTON, ")
        sb.AppendLine("       UNITKARTON, ")
        sb.AppendLine("       FRACKARTON, ")
        sb.AppendLine("       PLUKECIL, ")
        sb.AppendLine("       UNITKECIL, ")
        sb.AppendLine("       FRACKECIL, ")
        sb.AppendLine("       PRD_MINJUAL, ")
        sb.AppendLine("       QTYB, ")
        sb.AppendLine("       QTYK, ")
        sb.AppendLine("       TOLAKMINJ, ")
        sb.AppendLine("       AVGCOST ")
        sb.AppendLine("  From temp_pbidm_ready  ")
        sb.AppendLine(" Where REQ_ID = '" & IP & "'  ")
        sb.AppendLine("   And FDNOUO = '" & noPB & "'  ")
        sb.AppendLine("   And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')    ")
        sb.AppendLine("   And NOT EXISTS  ")
        sb.AppendLine("   (  ")
        sb.AppendLine("     Select BRC_Barcode  ")
        sb.AppendLine("       From tbMaster_Barcode ")
        sb.AppendLine("      Where BRC_PRDCD = PLUKECIL ")
        sb.AppendLine("   ) ")

        ExecQRY(sb.ToString, "INSERT INTO TEMP_NOJALUR_IDM 5")

        '--++ SET FIXED COUNTER + MARGIN + KodeSBU
        CounterKecil = 1
        CounterKarton = 2
        PersenMargin = 3
        KodeSBU = "I"

        sb = New StringBuilder
        sb.AppendLine("Select coalesce(COUNT(1),0)  ")
        sb.AppendLine("  From information_schema.columns ")
        sb.AppendLine(" Where UPPER(table_name) = 'TBMASTER_MARGINPLUIDM' ")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        jum = cmd.ExecuteScalar.ToString

        If jum > 0 Then
            sb = New StringBuilder
            sb.AppendLine("Insert Into tbMaster_PBOmi ")
            sb.AppendLine("( ")
            sb.AppendLine(" pbo_kodeigr, ")
            sb.AppendLine(" pbo_recordid, ")
            sb.AppendLine(" pbo_nourut, ")
            sb.AppendLine(" pbo_batch, ")
            sb.AppendLine(" pbo_tglpb, ")
            sb.AppendLine(" pbo_nopb, ")
            sb.AppendLine(" pbo_kodesbu, ")
            sb.AppendLine(" pbo_kodemember, ")
            sb.AppendLine(" pbo_kodeomi, ")
            sb.AppendLine(" pbo_kodedivisi, ")
            sb.AppendLine(" pbo_kodedepartemen, ")
            sb.AppendLine(" pbo_kodekategoribrg, ")
            sb.AppendLine(" pbo_pluomi, ")
            sb.AppendLine(" pbo_pluigr, ")
            sb.AppendLine(" pbo_hrgsatuan, ")
            sb.AppendLine(" pbo_qtyorder, ")
            sb.AppendLine(" pbo_qtyrealisasi, ")
            sb.AppendLine(" pbo_nilaiorder, ")
            sb.AppendLine(" pbo_ppnorder, ")
            sb.AppendLine(" pbo_distributionfee, ")
            sb.AppendLine(" pbo_create_by, ")
            sb.AppendLine(" pbo_create_dt,  ")
            sb.AppendLine(" pbo_TglStruk  ")
            sb.AppendLine(") ")
            sb.AppendLine("Select '" & KDIGR & "', ")
            sb.AppendLine("       '2', ")
            sb.AppendLine("       rownum, ")
            sb.AppendLine("       '" & CounterKarton & "', ")
            sb.AppendLine("       FDTGPB, ")
            sb.AppendLine("       FDNOUO, ")
            sb.AppendLine("       '" & KodeSBU & "', ")
            sb.AppendLine("       '', ")
            sb.AppendLine("       FDKCAB, ")
            sb.AppendLine("       prd_kodedivisi, ")
            sb.AppendLine("       prd_kodedepartement, ")
            sb.AppendLine("       prd_kodekategoribarang, ")
            sb.AppendLine("       FDKODE, ")
            sb.AppendLine("       plukecil, ")
            sb.AppendLine("       round(avgcost * (1 + (coalesce(MPI_MARGIN,3)/100) ),0), ")
            sb.AppendLine("       QtyB * CASE WHEN UnitKarton = 'KG' THEN 1 ELSE FracKarton END, ")
            sb.AppendLine("       QtyB * CASE WHEN UnitKarton = 'KG' THEN 1 ELSE FracKarton END, ")
            sb.AppendLine("       QtyB * CASE WHEN UnitKarton = 'KG' THEN 1 ELSE FracKarton END * round(avgcost * (1 + (coalesce(MPI_MARGIN,3)/100)),0), ")
            sb.AppendLine("       QtyB * CASE WHEN UnitKarton = 'KG' THEN 1 ELSE FracKarton END * round(avgcost * (1 + (coalesce(MPI_MARGIN,3)/100)),0) * (COALESCE(PRD_PPN,0)/100) * CASE WHEN coalesce(PRD_FlagBKP1,'X') = 'Y' THEN 1 ELSE 0 END, ")
            sb.AppendLine("       0, ")
            sb.AppendLine("       '" & UserID & "', ")
            sb.AppendLine("       CURRENT_DATE, ")
            sb.AppendLine("       trunc(CURRENT_DATE) ")
            sb.AppendLine("  From temp_pbidm_ready,tbmaster_prodmast,tbMaster_MarginPluIDM ")
            sb.AppendLine(" Where REQ_ID = '" & IP & "' ")
            sb.AppendLine("   and FDNOUO = '" & noPB & "' ")
            sb.AppendLine("   and FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("   and qtyb > 0 ")
            sb.AppendLine("   and prd_prdcd = PLUKarton ")
            sb.AppendLine("   and coalesce(TolakMinJ,'X') <> 'T' ")
            sb.AppendLine("   and MPI_PluIGR(+) = PLUKARTON ")
        Else
            sb = New StringBuilder
            sb.AppendLine("Insert Into tbMaster_PBOmi ")
            sb.AppendLine("( ")
            sb.AppendLine(" pbo_kodeigr, ")
            sb.AppendLine(" pbo_recordid, ")
            sb.AppendLine(" pbo_nourut, ")
            sb.AppendLine(" pbo_batch, ")
            sb.AppendLine(" pbo_tglpb, ")
            sb.AppendLine(" pbo_nopb, ")
            sb.AppendLine(" pbo_kodesbu, ")
            sb.AppendLine(" pbo_kodemember, ")
            sb.AppendLine(" pbo_kodeomi, ")
            sb.AppendLine(" pbo_kodedivisi, ")
            sb.AppendLine(" pbo_kodedepartemen, ")
            sb.AppendLine(" pbo_kodekategoribrg, ")
            sb.AppendLine(" pbo_pluomi, ")
            sb.AppendLine(" pbo_pluigr, ")
            sb.AppendLine(" pbo_hrgsatuan, ")
            sb.AppendLine(" pbo_qtyorder, ")
            sb.AppendLine(" pbo_qtyrealisasi, ")
            sb.AppendLine(" pbo_nilaiorder, ")
            sb.AppendLine(" pbo_ppnorder, ")
            sb.AppendLine(" pbo_distributionfee, ")
            sb.AppendLine(" pbo_create_by, ")
            sb.AppendLine(" pbo_create_dt,  ")
            sb.AppendLine(" pbo_TglStruk  ")
            sb.AppendLine(") ")
            sb.AppendLine("Select '" & KDIGR & "', ")
            sb.AppendLine("       NULL, ")
            sb.AppendLine("       rownum, ")
            sb.AppendLine("       '" & CounterKarton & "', ")
            sb.AppendLine("       FDTGPB, ")
            sb.AppendLine("       FDNOUO, ")
            sb.AppendLine("       '" & KodeSBU & "', ")
            sb.AppendLine("       '', ")
            sb.AppendLine("       FDKCAB, ")
            sb.AppendLine("       prd_kodedivisi, ")
            sb.AppendLine("       prd_kodedepartement, ")
            sb.AppendLine("       prd_kodekategoribarang, ")
            sb.AppendLine("       FDKODE, ")
            sb.AppendLine("       plukecil, ")
            sb.AppendLine("       round(avgcost * (1 + " & PersenMargin & "),0), ")
            sb.AppendLine("       QtyB * CASE WHEN UnitKarton = 'KG' THEN 1 ELSE FracKarton END, ")
            sb.AppendLine("       QtyB * CASE WHEN UnitKarton = 'KG' THEN 1 ELSE FracKarton END, ")
            sb.AppendLine("       QtyB * CASE WHEN UnitKarton = 'KG' THEN 1 ELSE FracKarton END * round(avgcost * (1 + " & PersenMargin & "),0), ")
            sb.AppendLine("       QtyB * CASE WHEN UnitKarton = 'KG' THEN 1 ELSE FracKarton END * round(avgcost * (1 + " & PersenMargin & "),0) * (COALESCE(PRD_PPN,0)/100) * CASE WHEN coalesce(PRD_FlagBKP1,'X') = 'Y' THEN 1 ELSE 0 END, ")
            sb.AppendLine("       0, ")
            sb.AppendLine("       '" & UserID & "', ")
            sb.AppendLine("       CURRENT_DATE, ")
            sb.AppendLine("       trunc(CURRENT_DATE) ")
            sb.AppendLine("  From temp_pbidm_ready,tbmaster_prodmast ")
            sb.AppendLine(" Where REQ_ID = '" & IP & "' ")
            sb.AppendLine("   and FDNOUO = '" & noPB & "' ")
            sb.AppendLine("   and FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("   and qtyb > 0 ")
            sb.AppendLine("   and prd_prdcd = PLUKarton ")
            sb.AppendLine("   and coalesce(TolakMinJ,'X') <> 'T' ")
        End If

        ExecQRY(sb.ToString, "INSERT KE MASDPB BULKY")

        sb = New StringBuilder
        sb.AppendLine("Select coalesce(Max(pbo_nourut),1) ")
        sb.AppendLine("  From tbMaster_PbOMI ")
        sb.AppendLine(" Where PBO_KodeIGR = '" & KDIGR & "' ")
        sb.AppendLine("   And PBO_NoPB = '" & noPB & "' ")
        sb.AppendLine("   And PBO_TglPB = to_date('" & tglPB & "','DD-MM-YYYY')")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        PBO_NoUrut = cmd.ExecuteScalar.ToString

        sb = New StringBuilder
        sb.AppendLine("Select coalesce(COUNT(1),0)  ")
        sb.AppendLine("  From information_schema.columns ")
        sb.AppendLine(" Where UPPER(table_name) = 'TBMASTER_MARGINPLUIDM' ")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        jum = cmd.ExecuteScalar.ToString

        If jum > 0 Then
            sb = New StringBuilder
            sb.AppendLine("Insert Into tbMaster_PBOmi ")
            sb.AppendLine("( ")
            sb.AppendLine(" pbo_kodeigr, ")
            sb.AppendLine(" pbo_recordid, ")
            sb.AppendLine(" pbo_nourut, ")
            sb.AppendLine(" pbo_batch, ")
            sb.AppendLine(" pbo_tglpb, ")
            sb.AppendLine(" pbo_nopb, ")
            sb.AppendLine(" pbo_kodesbu, ")
            sb.AppendLine(" pbo_kodemember, ")
            sb.AppendLine(" pbo_kodeomi, ")
            sb.AppendLine(" pbo_kodedivisi, ")
            sb.AppendLine(" pbo_kodedepartemen, ")
            sb.AppendLine(" pbo_kodekategoribrg, ")
            sb.AppendLine(" pbo_pluomi, ")
            sb.AppendLine(" pbo_pluigr, ")
            sb.AppendLine(" pbo_hrgsatuan, ")
            sb.AppendLine(" pbo_qtyorder, ")
            sb.AppendLine(" pbo_qtyrealisasi, ")
            sb.AppendLine(" pbo_nilaiorder, ")
            sb.AppendLine(" pbo_ppnorder, ")
            sb.AppendLine(" pbo_distributionfee, ")
            sb.AppendLine(" pbo_create_by, ")
            sb.AppendLine(" pbo_create_dt, ")
            sb.AppendLine(" pbo_TglStruk  ")
            sb.AppendLine(") ")
            sb.AppendLine("Select '" & KDIGR & "', ")
            sb.AppendLine("       NULL, ")
            sb.AppendLine("       rownum + " & PBO_NoUrut & ", ")
            sb.AppendLine("       '" & CounterKecil & "', ")
            sb.AppendLine("       FDTGPB, ")
            sb.AppendLine("       FDNOUO, ")
            sb.AppendLine("       '" & KodeSBU & "', ")
            sb.AppendLine("       '', ")
            sb.AppendLine("       FDKCAB, ")
            sb.AppendLine("       prd_kodedivisi, ")
            sb.AppendLine("       prd_kodedepartement, ")
            sb.AppendLine("       prd_kodekategoribarang, ")
            sb.AppendLine("       FDKODE, ")
            sb.AppendLine("       plukecil, ")
            sb.AppendLine("       round(avgcost * (1 + (coalesce(MPI_MARGIN,3) / 100)),0), ")
            sb.AppendLine("       QtyK * CASE WHEN UnitKecil = 'KG' THEN 1 ELSE FracKecil END, ")
            sb.AppendLine("       QtyK * CASE WHEN UnitKecil = 'KG' THEN 1 ELSE FracKecil END, ")
            sb.AppendLine("       QtyK * CASE WHEN UnitKecil = 'KG' THEN 1 ELSE FracKecil END * round(avgcost * (1 + (coalesce(MPI_MARGIN,3) / 100)),0), ")
            sb.AppendLine("       QtyK * CASE WHEN UnitKecil = 'KG' THEN 1 ELSE FracKecil END * round(avgcost * (1 + (coalesce(MPI_MARGIN,3) / 100)),0) * (COALESCE(PRD_PPN,0)/100) * CASE WHEN coalesce(PRD_FlagBKP1,'X') = 'Y' THEN 1 ELSE 0 END, ")
            sb.AppendLine("       0, ")
            sb.AppendLine("       '" & UserID & "', ")
            sb.AppendLine("       CURRENT_DATE, ")
            sb.AppendLine("       trunc(CURRENT_DATE)  ")
            sb.AppendLine("  From temp_pbidm_ready,tbmaster_prodmast,tbMaster_MarginPluIDM ")
            sb.AppendLine(" Where REQ_ID = '" & IP & "' ")
            sb.AppendLine("   and FDNOUO = '" & noPB & "' ")
            sb.AppendLine("   and FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("   and qtyK > 0 ")
            sb.AppendLine("   and prd_prdcd = PLUKarton ")
            sb.AppendLine("   and coalesce(TolakMinJ,'X') <> 'T' ")
            sb.AppendLine("   and MPI_PLUIGR(+) = PLUKARTON ")
        Else
            sb = New StringBuilder
            sb.AppendLine("Insert Into tbMaster_PBOmi ")
            sb.AppendLine("( ")
            sb.AppendLine(" pbo_kodeigr, ")
            sb.AppendLine(" pbo_recordid, ")
            sb.AppendLine(" pbo_nourut, ")
            sb.AppendLine(" pbo_batch, ")
            sb.AppendLine(" pbo_tglpb, ")
            sb.AppendLine(" pbo_nopb, ")
            sb.AppendLine(" pbo_kodesbu, ")
            sb.AppendLine(" pbo_kodemember, ")
            sb.AppendLine(" pbo_kodeomi, ")
            sb.AppendLine(" pbo_kodedivisi, ")
            sb.AppendLine(" pbo_kodedepartemen, ")
            sb.AppendLine(" pbo_kodekategoribrg, ")
            sb.AppendLine(" pbo_pluomi, ")
            sb.AppendLine(" pbo_pluigr, ")
            sb.AppendLine(" pbo_hrgsatuan, ")
            sb.AppendLine(" pbo_qtyorder, ")
            sb.AppendLine(" pbo_qtyrealisasi, ")
            sb.AppendLine(" pbo_nilaiorder, ")
            sb.AppendLine(" pbo_ppnorder, ")
            sb.AppendLine(" pbo_distributionfee, ")
            sb.AppendLine(" pbo_create_by, ")
            sb.AppendLine(" pbo_create_dt, ")
            sb.AppendLine(" pbo_TglStruk  ")
            sb.AppendLine(") ")
            sb.AppendLine("Select '" & KDIGR & "', ")
            sb.AppendLine("       NULL, ")
            sb.AppendLine("       rownum + " & PBO_NoUrut & ", ")
            sb.AppendLine("       '" & CounterKecil & "', ")
            sb.AppendLine("       FDTGPB, ")
            sb.AppendLine("       FDNOUO, ")
            sb.AppendLine("       '" & KodeSBU & "', ")
            sb.AppendLine("       '', ")
            sb.AppendLine("       FDKCAB, ")
            sb.AppendLine("       prd_kodedivisi, ")
            sb.AppendLine("       prd_kodedepartement, ")
            sb.AppendLine("       prd_kodekategoribarang, ")
            sb.AppendLine("       FDKODE, ")
            sb.AppendLine("       plukecil, ")
            sb.AppendLine("       round(avgcost * (1 + " & PersenMargin & "),0), ")
            sb.AppendLine("       QtyK * CASE WHEN UnitKecil = 'KG' THEN 1 ELSE FracKecil END, ")
            sb.AppendLine("       QtyK * CASE WHEN UnitKecil = 'KG' THEN 1 ELSE FracKecil END, ")
            sb.AppendLine("       QtyK * CASE WHEN UnitKecil = 'KG' THEN 1 ELSE FracKecil END * round(avgcost * (1 + " & PersenMargin & "),0), ")
            sb.AppendLine("       QtyK * CASE WHEN UnitKecil = 'KG' THEN 1 ELSE FracKecil END * round(avgcost * (1 + " & PersenMargin & "),0) * (COALESCE(PRD_PPN,0)/100) * CASE WHEN coalesce(PRD_FlagBKP1,'X') = 'Y' THEN 1 ELSE 0 END, ")
            sb.AppendLine("       0, ")
            sb.AppendLine("       '" & UserID & "', ")
            sb.AppendLine("       CURRENT_DATE, ")
            sb.AppendLine("       trunc(CURRENT_DATE)  ")
            sb.AppendLine("  From temp_pbidm_ready,tbmaster_prodmast ")
            sb.AppendLine(" Where REQ_ID = '" & IP & "' ")
            sb.AppendLine("   and FDNOUO = '" & noPB & "' ")
            sb.AppendLine("   and FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY')   ")
            sb.AppendLine("   and qtyK > 0 ")
            sb.AppendLine("   and prd_prdcd = PLUKarton ")
            sb.AppendLine("   and coalesce(TolakMinJ,'X') <> 'T' ")
        End If
        '--------------'
        '- 14-05-2013 -'
        '--------------'        

        ExecQRY(sb.ToString, "INSERT KE MASDPB PIECES")

        '--++ UPDATE PBO_KodeMember + RECID = 2
        sb = New StringBuilder
        sb.AppendLine("MERGE INTO  ")
        sb.AppendLine("( ")
        sb.AppendLine("  SELECT * ")
        sb.AppendLine("    FROM TBMASTER_PBOMI ")
        sb.AppendLine("   WHERE PBO_NOPB = '" & noPB & "' ")
        sb.AppendLine("     AND PBO_TglPB = TO_DATE('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine(") a ")
        sb.AppendLine("USING ")
        sb.AppendLine("( ")
        sb.AppendLine("  Select *  ")
        sb.AppendLine("    FROM tbMaster_TokoIGR ")
        sb.AppendLine(") b ")
        sb.AppendLine("ON (a.PBO_KodeOMI = b.TKO_KodeOMI) ")
        sb.AppendLine("WHEN MATCHED THEN ")
        sb.AppendLine("  UPDATE SET a.PBO_KodeMember = b.TKO_KodeCustomer, ")
        sb.AppendLine("             a.PBO_RecordID = '2' ")

        ExecQRY(sb.ToString, "UPDATE PBO_KodeMember")

        '-------------------------------'
        '+ UPDATE RECID TBMASTER_PBOMI +'
        '-------------------------------'
        sb = New StringBuilder
        sb.AppendLine("Update tbMaster_PBOMI ")
        sb.AppendLine("   Set pbo_recordID = '3' ")
        sb.AppendLine(" Where EXISTS ")
        sb.AppendLine(" ( ")
        sb.AppendLine("	Select PluKecil ")
        sb.AppendLine("	  From TEMP_KARTON_NONDPD_IDM ")
        sb.AppendLine("	 Where REQ_ID = '" & IP & "' ")
        sb.AppendLine("       And FDNOUO = '" & noPB & "' ")
        sb.AppendLine("       And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("       And PLUKARTON Like substr(PBO_PluIGR,1,6)||'%' ")
        sb.AppendLine(" ) ")
        sb.AppendLine("   And PBO_KodeIGR = '" & KDIGR & "' ")
        sb.AppendLine("   And PBO_NoPB = '" & noPB & "' ")
        sb.AppendLine("   And PBO_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   And PBO_Batch = '" & CounterKarton & "' ")

        ExecQRY(sb.ToString, "UPDATE RECID = '3' TBMASTER_PBOMI JALUR KARTON")

        sb = New StringBuilder
        sb.AppendLine("Update tbMaster_PBOMI ")
        sb.AppendLine("   Set pbo_recordID = '3' ")
        sb.AppendLine(" Where EXISTS ")
        sb.AppendLine(" ( ")
        sb.AppendLine("	Select PluKecil ")
        sb.AppendLine("	  From TEMP_NOJALUR_IDM ")
        sb.AppendLine("	 Where REQ_ID = '" & IP & "' ")
        sb.AppendLine("    And FDNOUO = '" & noPB & "' ")
        sb.AppendLine("    And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("    And PLUKARTON Like substr(PBO_PluIGR,1,6)||'%' ")
        sb.AppendLine("  And Not EXISTS ")
        sb.AppendLine("    ( ")
        sb.AppendLine("       Select grr_grouprak ")
        sb.AppendLine("         from tbmaster_grouprak,tbmaster_lokasi lks2 ")
        sb.AppendLine("        where grr_koderak = lks2.lks_koderak ")
        sb.AppendLine("          and grr_subrak = lks2.lks_kodesubrak ")
        sb.AppendLine("          and LKS_KodeRak Like 'D%' ")
        sb.AppendLine("          And LKS_TIPERAK(+) NOT LIKE 'S%' ")
        sb.AppendLine("          and lks_prdcd = plukarton ")
        sb.AppendLine("    )  ")
        sb.AppendLine(" ) ")
        sb.AppendLine("   And PBO_KodeIGR = '" & KDIGR & "' ")
        sb.AppendLine("   And PBO_NoPB = '" & noPB & "' ")
        sb.AppendLine("   And PBO_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")

        ExecQRY(sb.ToString, "UPDATE RECID = '3' TBMASTER_PBOMI JALUR PIECES")

        sb = New StringBuilder
        sb.AppendLine("Update tbMaster_PBOMI ")
        sb.AppendLine("   Set pbo_recordID = '3' ")
        sb.AppendLine(" Where EXISTS ")
        sb.AppendLine(" ( ")
        sb.AppendLine("	Select PluKecil ")
        sb.AppendLine("	  From TEMP_JALURKERTAS_IDM ")
        sb.AppendLine("	 Where REQ_ID = '" & IP & "' ")
        sb.AppendLine("    And FDNOUO = '" & noPB & "' ")
        sb.AppendLine("    And FDTGPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("    And PLUKARTON Like substr(PBO_PluIGR,1,6)||'%' ")
        sb.AppendLine(" ) ")
        sb.AppendLine("   And PBO_KodeIGR = '" & KDIGR & "' ")
        sb.AppendLine("   And PBO_NoPB = '" & noPB & "' ")
        sb.AppendLine("   And PBO_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")

        ExecQRY(sb.ToString, "UPDATE RECID = '3' TBMASTER_PBOMI JALUR PIECES")

        ''--++ 18-12-2013 POTONG QTY STOCK VIRTUAL
        'sb = New StringBuilder
        'sb.AppendLine("MERGE INTO STOCK_VIRTUAL a ")
        'sb.AppendLine("USING ")
        'sb.AppendLine("( ")
        'sb.AppendLine("  Select PBO_PLUIGR,SUM(PBO_QtyOrder) as QTY ")
        'sb.AppendLine("    From tbMaster_PBOMI ")
        'sb.AppendLine("   Where PBO_KodeOMI = '" & KodeToko & "' ")
        'sb.AppendLine("     And PBO_NoPB = '" & noPB & "' ")
        'sb.AppendLine("	 And PBO_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        'sb.AppendLine("   Group By PBO_PLUIGR ")
        'sb.AppendLine(") b  ")
        'sb.AppendLine("ON (a.STV_PRDCD = SUBSTR(b.PBO_PLUIGR,1,6)||'0') ")
        'sb.AppendLine("WHEN MATCHED THEN ")
        'sb.AppendLine("    UPDATE SET a.STV_QTY = a.STV_QTY - b.QTY ")

        'ExecQRY(sb.ToString, "POTONG QTY STOCK_VIRTUAL")
        ''---- 18-12-2013 POTONG QTY STOCK VIRTUAL
        '--------------------------'
        '+ INSERT TBHEADER_PB_IDM +'
        '--------------------------'
        '--------------'
        '+ 08-05-2013 +'
        '--------------'
        sb = New StringBuilder
        sb.AppendLine("Select coalesce(COUNT(1),0)  ")
        sb.AppendLine("  From CSV_PB_MAJALAH ")
        sb.AppendLine("	Where CPM_IP = '" & IP & "' ")
        sb.AppendLine("   And CPM_NoPB = '" & noPB & "' ")
        sb.AppendLine("   And CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        jumItmCSV = cmd.ExecuteScalar.ToString

        sb = New StringBuilder
        sb.AppendLine("Select coalesce(Count(1),0)  ")
        sb.AppendLine("  From temp_cetakpb_tolakan_idm ")
        sb.AppendLine(" Where REQ_ID = '" & IP & "'   ")
        sb.AppendLine("   And nodok = '" & noPB & "'   ")
        sb.AppendLine("   And tgldok = to_date('" & tglPB & "','DD-MM-YYYY') ")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        jumTolakan = cmd.ExecuteScalar.ToString

        sb = New StringBuilder
        sb.AppendLine("Select sum(coalesce(pbo_nilaiorder,0))  ")
        sb.AppendLine("  From tbMaster_PBOMI ")
        sb.AppendLine(" Where PBO_KodeIGR = '" & KDIGR & "'   ")
        sb.AppendLine("   And PBO_NoPB = '" & noPB & "'   ")
        sb.AppendLine("   And PBO_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")

        If cn.State = ConnectionState.Closed Then cn.Open()
        cmd.CommandText = sb.ToString
        rphOrder = cmd.ExecuteScalar.ToString

        JumlahKontainer = 0
        JumlahBronjong = 0
        KubikasiKontainer = 0
        KubikasiBronjong = 0

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO TBTR_Header_Majalah  ")
        sb.AppendLine("( ")
        sb.AppendLine("  HDM_kodeigr, ")
        sb.AppendLine("  HDM_Flag, ")
        sb.AppendLine("  HDM_tgltransaksi, ")
        sb.AppendLine("  HDM_kodetoko, ")
        sb.AppendLine("  HDM_nopb, ")
        sb.AppendLine("  HDM_tglpb, ")
        sb.AppendLine("  HDM_itempb, ")
        sb.AppendLine("  HDM_itemvalid, ")
        sb.AppendLine("  HDM_rphvalid, ")
        sb.AppendLine("  HDM_filepb, ")
        sb.AppendLine("  HDM_keterangan, ")
        sb.AppendLine("  HDM_create_by, ")
        sb.AppendLine("  HDM_create_dt ")
        sb.AppendLine(") ")
        sb.AppendLine("Select pbo_kodeigr, ")
        sb.AppendLine("       '1', ")
        sb.AppendLine("       trunc(CURRENT_DATE), ")
        sb.AppendLine("       pbo_kodeomi, ")
        sb.AppendLine("       pbo_noPB, ")
        sb.AppendLine("       pbo_tglPB, ")
        sb.AppendLine("       Count(PBO_PLUIGR), ")
        sb.AppendLine("	      COunt(PBO_PLUIGR), ")
        sb.AppendLine("	      SUM(PBO_NilaiOrder), ")
        sb.AppendLine("       '" & FilePB & "', ")
        sb.AppendLine("       'PB MAJALAH', ")
        sb.AppendLine("       '" & UserID & "', ")
        sb.AppendLine("	      CURRENT_DATE ")
        sb.AppendLine("  FROM tbMaster_pbomi ")
        sb.AppendLine(" Where pbo_noPB = '" & noPB & "' ")
        sb.AppendLine("   and pbo_tglPB = TO_DATE('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine(" GROUP BY pbo_kodeigr, ")
        sb.AppendLine("       pbo_kodeomi, ")
        sb.AppendLine("       pbo_noPB, ")
        sb.AppendLine("       pbo_tglPB ")

        ExecQRY(sb.ToString, "Insert Into tbtr_header_pbidm")

        sb = New StringBuilder
        sb.AppendLine("MERGE INTO  ")
        sb.AppendLine("( ")
        sb.AppendLine("  SELECT *  ")
        sb.AppendLine("    FROM TBTR_Header_Majalah ")
        sb.AppendLine("   WHERE HDM_NOPB = '" & noPB & "' ")
        sb.AppendLine("     AND HDM_tglPB = TO_DATE('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("	 AND HDM_Flag IS NULL ")
        sb.AppendLine(") a ")
        sb.AppendLine("USING ")
        sb.AppendLine("( ")
        sb.AppendLine("  SELECT TLKO_KODEOMI, ")
        sb.AppendLine("         TLKO_NOPB, ")
        sb.AppendLine("         TLKO_TglPB, ")
        sb.AppendLine("         COUNT(TLKO_PLUOMI)	as itemTolakan  ")
        sb.AppendLine("    FROM TBTR_TOLAKANPBOMI ")
        sb.AppendLine("   Where TLKO_NoPB = '" & noPB & "' ")
        sb.AppendLine("     And TLKO_TglPB = TO_DATE('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   GROUP BY TLKO_KODEOMI, ")
        sb.AppendLine("         TLKO_NOPB, ")
        sb.AppendLine("         TLKO_TglPB ")
        sb.AppendLine(") b ")
        sb.AppendLine("ON  ")
        sb.AppendLine("( ")
        sb.AppendLine("      a.HDM_KodeToko = b.TLKO_KodeOMI ")
        sb.AppendLine("  AND a.HDM_NoPB = b.TLKO_NoPB ")
        sb.AppendLine("  AND a.HDM_TglPB = b.TLKO_TglPB ")
        sb.AppendLine(") ")
        sb.AppendLine("WHEN MATCHED THEN ")
        sb.AppendLine("  UPDATE SET a.HDM_itempb = a.HDM_itempb + b.itemTolakan ")

        ExecQRY(sb.ToString, "MERGE TBTR_Header_Majalah")

        sb = New StringBuilder
        sb.AppendLine("INSERT INTO DPD_PICKING_MAJALAH_IDM ")
        sb.AppendLine("( ")
        sb.AppendLine("  DPMI_KodeSBU, ")
        sb.AppendLine("  DPMI_KodeToko, ")
        sb.AppendLine("  DPMI_NoPB, ")
        sb.AppendLine("  DPMI_TglPB, ")
        sb.AppendLine("  DPMI_ZONA, ")
        sb.AppendLine("  DPMI_PRDCD, ")
        sb.AppendLine("  DPMI_NoID, ")
        sb.AppendLine("  DPMI_QtyOrderX, ")
        sb.AppendLine("  DPMI_QtyOrder, ")
        sb.AppendLine("  DPMI_TglUpload, ")
        sb.AppendLine("  DPMI_IP ")
        sb.AppendLine(") ")
        sb.AppendLine("SELECT KodeSBU, ")
        sb.AppendLine("       PBO_KodeOMI, ")
        sb.AppendLine("	      PBO_NoPB, ")
        sb.AppendLine("	      PBO_TglPB, ")
        sb.AppendLine("	      ZMI_Zona, ")
        sb.AppendLine("	      PBO_PluIGR, ")
        sb.AppendLine("	      LKS_NOID, ")
        sb.AppendLine("	      PBO_QtyOrder, ")
        sb.AppendLine("	      PBO_QtyOrder, ")
        sb.AppendLine("	      CURRENT_DATE, ")
        sb.AppendLine("	      '" & IP & "' ")
        sb.AppendLine("  FROM  ")
        sb.AppendLine("(   ")
        sb.AppendLine("Select '" & KodeSBU & "' as KodeSBU, ")
        sb.AppendLine("       PBO_KodeOMI, ")
        sb.AppendLine("	      PBO_NoPB, ")
        sb.AppendLine("	      PBO_TglPB, ")
        sb.AppendLine("	      ZMI_Zona, ")
        sb.AppendLine("	      PBO_PluIGR, ")
        sb.AppendLine("	      PBO_QtyOrder ")
        sb.AppendLine("  From tbMaster_PBOMI, ")
        sb.AppendLine("       ZONA_Majalah_IDM ")
        sb.AppendLine(" WHERE PBO_NOPB = '" & noPB & "' ")
        sb.AppendLine("   AND PBO_TglPB = TO_DATE('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   AND PBO_KodeOMI = ZMI_KodeTOKO ")
        sb.AppendLine(") A, tbMaster_Lokasi ")
        sb.AppendLine(" Where LKS_PRDCD = SUBSTR(PBO_PLUIGR,1,LENGTH(PBO_PLUIGR)-1)||'0' ")
        sb.AppendLine("   And LKS_JenisRak <> 'S' ")
        sb.AppendLine("   And LKS_Noid IS NOT NULL ")

        ExecQRY(sb.ToString, "INSERT INTO DPD_PICKING_MAJALAH_IDM")

        sb = New StringBuilder
        sb.AppendLine("MERGE INTO  ")
        sb.AppendLine("( ")
        sb.AppendLine("  SELECT *  ")
        sb.AppendLine("    FROM DPD_PICKING_MAJALAH_IDM ")
        sb.AppendLine("   WHERE DPMI_NoPB = '" & noPB & "' ")
        sb.AppendLine("     AND DPMI_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine(") a ")
        sb.AppendLine("USING ")
        sb.AppendLine("( ")
        sb.AppendLine("  Select *  ")
        sb.AppendLine("    FROM CSV_PB_Majalah ")
        sb.AppendLine("   Where CPM_NoPB = '" & noPB & "' ")
        sb.AppendLine("     And CPM_TglPB = to_date('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("	 And CPM_IP = '" & IP & "' ")
        sb.AppendLine(") b ")
        sb.AppendLine("ON ")
        sb.AppendLine("( ")
        sb.AppendLine("      a.DPMI_NOPB = b.CPM_NoPB ")
        sb.AppendLine("  AND a.DPMI_TglPB = b.CPM_TglPB ")
        sb.AppendLine("  AND a.DPMI_KodeToko = b.CPM_KodeToko ")
        sb.AppendLine("  AND a.DPMI_PRDCD = b.CPM_PLUIDM ")
        sb.AppendLine(") ")
        sb.AppendLine("WHEN MATCHED THEN ")
        sb.AppendLine("  UPDATE SET a.DPMI_NoUrut = b.CPM_NoUrut ")

        ExecQRY(sb.ToString, "MERGE INTO DPD_PICKING_MAJALAH_IDM")

        '--++ SET TOKO MANA YANG TIDAK DAPAT JATAH ALOKASI
        ISI_MAJALAH_STOCKOUT(noPB, tglPB, "ISI_MAJALAH_STOCKOUT")

        '--++ NOLIN TOKO YG TIDAK DAPAT JATAH
        sb = New StringBuilder
        sb.AppendLine("UPDATE DPD_PICKING_MAJALAH_IDM  ")
        sb.AppendLine("   SET DPMI_QTYORDER = 0,  ")
        sb.AppendLine("       DPMI_QTYPICK = 0,  ")
        sb.AppendLine("       DPMI_RECORDID = '3'  ")
        sb.AppendLine(" WHERE DPMI_NOPB = '" & noPB & "'  ")
        sb.AppendLine("   AND DPMI_TGLPB = To_Date('" & tglPB & "','DD_MM_RRRR')  ")
        sb.AppendLine("   AND EXISTS  ")
        sb.AppendLine("   ( ")
        sb.AppendLine("     SELECT MSO_PRDCD ")
        sb.AppendLine("	      FROM MAJALAH_StockOUT ")
        sb.AppendLine("	     WHERE MSO_NOPB = DPMI_NOPB ")
        sb.AppendLine("	       AND MSO_TGLPB = DPMI_TglPB ")
        sb.AppendLine("		   AND MSO_PRDCD = DPMI_PRDCD ")
        sb.AppendLine("		   AND MSO_KodeTOKO = DPMI_KodeToko ")
        sb.AppendLine("   ) ")

        ExecQRY(sb.ToString, "NOLIN TOKO YG TIDAK DAPAT JATAH DI DPD_PICKING_MAJALAH_IDM")

        '--++ INSERT INTO PICKING_ANTRIAN_MAJALAH
        sb = New StringBuilder
        sb.AppendLine("INSERT INTO PICKING_ANTRIAN_MAJALAH ")
        sb.AppendLine("( ")
        sb.AppendLine("  PAM_PRDCD,   ")
        sb.AppendLine("  PAM_Zona, ")
        sb.AppendLine("  PAM_NoUrutPLU, ")
        sb.AppendLine("  PAM_JumlahToko, ")
        sb.AppendLine("  PAM_QtyOrder,   ")
        sb.AppendLine("  PAM_Create_By, ")
        sb.AppendLine("  PAM_Create_Dt ")
        sb.AppendLine(") ")
        sb.AppendLine("Select DPMI_PRDCD, ")
        sb.AppendLine("	      DPMI_ZONA, ")
        sb.AppendLine("	      Rank() OVER (PARTITION BY DPMI_ZONA  ")
        sb.AppendLine("	                    ORDER BY DPMI_PRDCD ")
        sb.AppendLine("                   ) AS RNK, ")
        sb.AppendLine("	      Count(DPMI_KodeToko), ")
        sb.AppendLine("	      SUM(DPMI_QtyOrder), ")
        sb.AppendLine("	      '" & UserID & "', ")
        sb.AppendLine("	      CURRENT_DATE ")
        sb.AppendLine("  From DPD_PICKING_MAJALAH_IDM ")
        sb.AppendLine(" Where DPMI_NoPB = '" & noPB & "' ")
        sb.AppendLine("   And DPMI_TglPB = TO_DATE('" & tglPB & "','DD-MM-YYYY') ")
        sb.AppendLine("   And coalesce(DPMI_QTYORDER,0) > 0 ")
        sb.AppendLine(" Group By DPMI_PRDCD, ")
        sb.AppendLine("       DPMI_ZONA ")

        ExecQRY(sb.ToString, "INSERT INTO PICKING_ANTRIAN_MAJALAH")

cetakPDF:
        Application.DoEvents()
        progress.Value = 85
        '--++ 03-02-2014
        'CetakALL(PersenMargin, CounterKarton, CounterKecil)
        CetakALL_1(PersenMargin, CounterKarton, CounterKecil)
        CetakALL_2(PersenMargin, CounterKarton, CounterKecil)
        CetakALL_3(PersenMargin, CounterKarton, CounterKecil)
        CetakALL_4(PersenMargin, CounterKarton, CounterKecil)
        CetakALL_5(PersenMargin, CounterKarton, CounterKecil)
        CetakALL_6(PersenMargin, CounterKarton, CounterKecil)
        '---- 03-02-2014